{"version":3,"sources":["ts/utils.tsx","js/utils.react.js","ts/Buttons.tsx","ts/Tag.tsx","ts/Tabs.tsx","js/tabs.react.js","js/menu.react.js","ts/Menu.tsx","js/tree.react.js","ts/Tree.tsx","js/cascader.react.js","ts/Cascader.tsx","ts/Divider.tsx","ts/Switch.tsx","js/transfer.react.js","ts/Transfer.tsx","ts/Segmented.tsx","js/segmented.react.js","ts/Alert.tsx","ts/Rate.tsx","ts/Steps.tsx","js/steps.react.js","ts/Checkbox.tsx","ts/Result.tsx","ts/Pagination.tsx","js/chip.react.js","components.tsx","ts/Chip.tsx","index.tsx"],"names":["CustomIcon","props","icon","style","class_","class","size","color","name","type","innerStyle","getSize","GetColor","iconStyle","Object","assign","_jsx","className","concat","DynamicComponent","antIcon","_Fragment","LabelWrap","label","desc","undefined","align","grow","children","textColor","display","justifyContent","_jsxs","flexDirection","gap","width","lineHeight","fontFamily","fontSize","markdown","RgbaColor","MartineFontSize","MartineRadiusSize","base","arguments","length","indexOf","theme","useMantineTheme","getRootColor","keys","colors","alpha","fn","rgba","DarkenColor","darken","x","ReactMarkdown","rehypePlugins","rehypeRaw","deepCopy","obj","JSON","parse","stringify","insertStyle","id","element","document","getElementById","createElement","innerHTML","root","appendChild","varColor","colorComponents","test","hex","substring","split","map","char","join","_hex$match$map","match","c","parseInt","_hex$match$map2","_slicedToArray","_match$map","Number","_match$map2","getColorComponents","getComputedStyle","documentElement","getPropertyValue","trim","_colorComponents","r","g","b","getCollapseKeys","items","getKey","Array","isArray","obj_","push","key","getParentKeys","parentKeys","k","allParentKeys","getParentKey","tree","parentKey","i","node","some","item","getParentKey_","getParent","j","reindex","index","asString","String","getHrefKeys","href","parseIcon","prototype","toString","call","AntdButtons","description","variant","radius","direction","return_index","kv","_useState","useState","_useState2","selected","setSelected","useEffect","setTimeout","Streamlit","setFrameHeight","prevIndex","useRef","prevStValue","st_i","current","setComponentValue","onClick","idx","buttonGroup","otherType","find","type_","isSelect","primary_color","text_color","linkColor","selectStyle","unSelectStyle","ConfigProvider","components","Button","colorText","colorTextDisabled","colorPrimary","colorBgContainerDisabled","colorBgContainer","colorPrimaryHover","colorPrimaryActive","colorBgTextHover","colorLink","colorLinkHover","colorLinkActive","colorBorder","borderRadius","disabled","target","AntdButton","Space","Compact","wrap","classNames","AntdTags","tagStyle","Tag","defaultColor","defaultBg","colorFillSecondary","link","bordered","closable","marginRight","closeIcon","margin","paddingInline","rel","AntdTag","AntdTabs","obj_copy","tag","strToNode","position","height","primaryColor","borderColor","bgColor","activeKey","setActiveKey","tabsHeight","includes","Tabs","itemActiveColor","itemHoverColor","itemSelectedColor","inkBarColor","cardBg","cardGutter","cardHeight","colorBorderSecondary","defaultActiveKey","onTabClick","tabPosition","desc_color","wordBreak","fontWeight","flexGrow","AntdMenu","dsk","openIndex","open_index","openAll","indent","dok","primaryLightColor","textStyle","selectKey","setSelectKey","Menu","itemBorderRadius","itemColor","groupTitleColor","itemDisabledColor","itemHoverBg","itemActiveBg","itemSelectedBg","subMenuItemBg","itemBg","colorSplit","itemHeight","onSelect","e","onOpenChange","stValue","selectedKeys","borderRightWidth","overflowY","defaultSelectedKeys","defaultOpenKeys","mode","inlineIndent","subMenuCloseDelay","treeIcon","itemIcon","tooltip","whiteSpace","alignSelf","Tooltip","colorBgSpotlight","colorTextLightSolid","controlHeight","title","placement","arrow","overlayInnerStyle","padding","border","AntdTree","checkable","checkStrictly","showLine","value","setValue","Tree","controlItemBgHover","controlItemBgActive","controlInteractiveSize","selectedKeys_","info","onCheck","checkedKeys_","ck","onExpand","checkedKeys","defaultCheckedKeys","defaultExpandedKeys","treeData","selectable","switcherIcon","CaretDownFilled","blockNode","virtual","overflowX","AntdCascader","placeholder","multiple","search","allowClear","strict","borderStyle","setHeight","Cascader","Select","colorBgElevated","colorTextPlaceholder","colorIcon","colorIconHover","controlOutlineWidth","options","onChange","v","st","from","Set","flat","sort","showSearch","filter","inputValue","path","option","rawLabel","toLowerCase","dropdownMatchSelectWidth","suffixIcon","expandIcon","CaretRightFilled","maxTagCount","maxTagTextLength","defaultValue","popupClassName","onDropdownVisibleChange","visible","notFoundContent","textAlign","displayRender","labels","selectedOptions","expandTrigger","showCheckedStrategy","SHOW_PARENT","SHOW_CHILD","AntdDivider","Divider","labelPosition","AntdSwitch","onLabel","offLabel","onColor","offColor","secondaryBgColor","checked","setChecked","Switch","event","currentTarget","styles","marginBottom","trackLabel","track","cursor","backgroundColor","AntdTransfer","titles","pagination","oneway","reload","dataSource","setDataSource","_useState3","_useState4","targetKeys","setTargetKeys","reset","Transfer","controlItemBgActiveHover","Checkbox","Input","activeBorderColor","Pagination","Dropdown","boxShadowSecondary","Empty","nextTargetKeys","moveKeys","onSearch","dir","render","showSelectAll","oneWay","listStyle","minHeight","footer","_","float","ReloadOutlined","AntdSegmented","item_","bg_color","divider","readonly","SegmentedControl","data","fullWidth","orientation","readOnly","alignItems","indicator","control","AntdAlert","message","banner","colorList","primary","lighten","getStyle","getPlay","_getBanner","ban","db","Boolean","getBanner","_getBanner2","totalBanner","messageBanner","descriptionBanner","customMarquee","Marquee","pauseOnHover","speed","play","Alert","showIcon","onClose","AntdRate","count","symbol","half","Rate","colorFillContent","character","StarFilled","allowHalf","AntdSteps","dot","setCurrent","Steps","colorTextLabel","navArrowColor","colorTextDescription","customIconFontSize","iconFontSize","iconSize","dotSize","dotCurrentSize","iconTop","labelPlacement","progressDot","AntdCheckbox","check_all","allIndex","checkedList","setCheckedList","initState","y","indeterminate","setIndeterminate","_useState5","_useState6","checkAll","setCheckAll","onCheckAllChange","st_ii","paddingRight","Group","list","AntdResult","subtitle","status","colorMap","s","Result","colorTextHeading","extraMargin","colorInfo","colorSuccess","success","colorWarning","warning","colorError","error","subTitle","wordWrap","AntdPagination","total","page_size","jump","previous","next","simple","show_total","colorBgTextActive","itemSize","controlItemBgActiveDisabled","showQuickJumper","defaultCurrent","defaultPageSize","page","showTitle","showSizeChanger","itemRender","originalElement","showTotal","t","componentsMap","Wrap","Stack","ii","Chip","values","spacing","checkIcon","StreamlitAntdComponent","withStreamlitConnection","args","kw","scrollBarColor","insertScrollbarStyle","component","ReactDOM","React","StrictMode"],"mappings":"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","file":"static/js/main.e380f842.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {GetColor, getSize, markdown, RgbaColor} from \"../js/utils.react\";\r\nimport * as antIcon from \"@ant-design/icons\";\r\n\r\ninterface CustomIconProps {\r\n    icon: { size: any, color: any, name: any, type: any } | null | any\r\n    style?: React.CSSProperties\r\n    class?: string\r\n}\r\n\r\nconst CustomIcon = (props: CustomIconProps) => {\r\n    const icon = props.icon\r\n    const style = props.style\r\n    const class_ = props.class\r\n    if (icon) {\r\n        const {size, color, name, type} = icon\r\n        let innerStyle = {}\r\n        if (size) {\r\n            // @ts-ignore\r\n            innerStyle['fontSize'] = getSize(size)\r\n        }\r\n        if (color) {\r\n            // @ts-ignore\r\n            innerStyle['color'] = GetColor(color)\r\n        }\r\n        const iconStyle = Object.assign({}, style, innerStyle)\r\n        if (type === 'BsIcon') {\r\n            return <i className={`bi bi-${name} ${class_ || ''}`} style={iconStyle}/>\r\n        }\r\n        if (type === 'AntIcon') {\r\n            // @ts-ignore\r\n            const DynamicComponent = antIcon[name]\r\n            return <DynamicComponent className={class_ || ''} style={iconStyle}/>\r\n        }\r\n    }\r\n    return <></>\r\n}\r\n\r\ninterface LabelWrapProps {\r\n    label: string\r\n    desc: string\r\n    size?: string\r\n    align?: string\r\n    grow?: boolean\r\n    children: React.ReactNode\r\n    style?: React.CSSProperties\r\n}\r\n\r\nconst LabelWrap = (props: LabelWrapProps) => {\r\n    const label = props.label\r\n    const desc = props.desc\r\n    const size = props.size === undefined ? 'md' : props.size\r\n    const align = props.align === undefined ? 'start' : props.align\r\n    const grow = props.grow === undefined ? false : props.grow\r\n    const children = props.children\r\n    const style = props.style\r\n    const textColor = GetColor('--text-color')\r\n\r\n    return <div style={{display: grow ? 'block' : 'flex', justifyContent: align}}>\r\n        <div style={Object.assign({\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: 5,\r\n            width: grow ? '100%' : 'unset',\r\n        }, style)}>\r\n            <div style={{lineHeight: 1.3, fontFamily: 'var(--font)', display: label === null ? 'none' : 'block'}}>\r\n                <div style={{color: textColor, fontSize: getSize(size)}}>{markdown(label)}</div>\r\n                <div style={{\r\n                    color: RgbaColor(textColor, 0.5),\r\n                    fontSize: getSize(size) - 2,\r\n                    display: desc === null ? 'none' : 'block'\r\n                }}>{markdown(desc)}</div>\r\n            </div>\r\n            {children}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport {CustomIcon, LabelWrap};","import React from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport rehypeRaw from \"rehype-raw\";\r\nimport {useMantineTheme} from \"@mantine/core\";\r\nimport {CustomIcon} from \"../ts/utils\";\r\n\r\nconst MartineFontSize = {\r\n    'xs': 12,\r\n    'sm': 14,\r\n    'md': 16,\r\n    'lg': 18,\r\n    'xl': 20,\r\n}\r\nconst MartineRadiusSize = {\r\n    'xs': 2,\r\n    'sm': 4,\r\n    'md': 8,\r\n    'lg': 16,\r\n    'xl': 32,\r\n}\r\n\r\nconst getFlexDirection = (position) => {\r\n    const IconPosition = {\r\n        'left': 'row',\r\n        'right': 'row-reverse',\r\n        'top': 'column',\r\n        'bottom': 'column-reverse'\r\n    }\r\n    if (Object.keys(IconPosition).indexOf(position) !== -1) {\r\n        return IconPosition[position]\r\n    }\r\n    return 'row'\r\n}\r\n\r\nconst getSize = (size, base = MartineFontSize) => {\r\n    if (['xs', 'sm', 'md', 'lg', 'xl'].indexOf(size) !== -1) {\r\n        return base[size]\r\n    } else {\r\n        return size\r\n    }\r\n}\r\n\r\n\r\nconst GetColor = (color) => {\r\n    const theme = useMantineTheme()\r\n    if (color.indexOf('--') === 0) {\r\n        return getRootColor(color)\r\n    } else {\r\n        if (Object.keys(theme.colors).indexOf(color) !== -1) {\r\n            return theme.colors[color][6]\r\n        } else {\r\n            return color\r\n        }\r\n    }\r\n}\r\nconst RgbaColor = (color, alpha = 0.2) => {\r\n    const theme = useMantineTheme()\r\n    return theme.fn.rgba(color, alpha)\r\n}\r\nconst DarkenColor = (color, alpha = 0.2) => {\r\n    const theme = useMantineTheme()\r\n    return theme.fn.darken(color, alpha)\r\n}\r\nconst LightenColor = (color, alpha = 0.2) => {\r\n    const theme = useMantineTheme()\r\n    return theme.fn.lighten(color, alpha)\r\n}\r\n\r\n\r\nconst markdown = (x) => {\r\n    if (x !== null) {\r\n        return <ReactMarkdown rehypePlugins={[rehypeRaw]} className={'sac-markdown'}>{x}</ReactMarkdown>\r\n    }\r\n    return undefined\r\n}\r\n\r\nconst deepCopy = (obj) => {\r\n    return JSON.parse(JSON.stringify(obj))\r\n}\r\n\r\nconst insertStyle = (id, style) => {\r\n    let element = document.getElementById(id);\r\n    if (!element) {\r\n        element = document.createElement(\"style\");\r\n        element.id = id;\r\n    }\r\n    element.innerHTML = style;\r\n    let root = document.getElementById(\"root\");\r\n    root && root.appendChild(element)\r\n}\r\n\r\nconst insertScrollbarStyle = () => {\r\n    const textColor = GetColor('--text-color')\r\n    let scrollBarColor = RgbaColor(textColor, 0.4)\r\n    let style = `\r\n        ::-webkit-scrollbar {\r\n            height: 6px;\r\n            width: 6px;\r\n            background-color: transparent;\r\n        }\r\n        ::-webkit-scrollbar-thumb {\r\n            border-radius: 10px;\r\n            background-color: ${scrollBarColor};\r\n        }`\r\n    //insert style\r\n    insertStyle('sac.scrollbar', style)\r\n}\r\n\r\nconst getRootColor = (varColor) => {\r\n    const getColorComponents = (color) => {\r\n        // Handle hexadecimal color format\r\n        const hexMatch = /^#([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$/;\r\n        if (hexMatch.test(color)) {\r\n            let hex = color.substring(1);\r\n            if (hex.length === 3) {\r\n                hex = hex.split('').map((char) => char + char).join('');\r\n            }\r\n            const [r, g, b] = hex.match(/.{2}/g).map((c) => parseInt(c, 16));\r\n            return [r, g, b];\r\n        }\r\n\r\n        // Handle RGB and RGBA color formats\r\n        const rgbMatch = /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*[\\d.]+)?\\)$/;\r\n        const match = color.match(rgbMatch);\r\n        if (match) {\r\n            const [_, r, g, b] = match.map(Number);\r\n            return [r, g, b];\r\n        }\r\n\r\n        // Handle other color formats or invalid colors\r\n        return null;\r\n    };\r\n    const color = getComputedStyle(document.documentElement).getPropertyValue(varColor).trim();\r\n    const colorComponents = getColorComponents(color)\r\n    if (colorComponents) {\r\n        const [r, g, b] = colorComponents\r\n        return `rgb(${r},${g},${b})`\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nconst getCollapseKeys = (items) => {\r\n    let keys = []\r\n\r\n    const getKey = (obj) => {\r\n        if (Array.isArray(obj)) {\r\n            obj.map(obj_ => getKey(obj_))\r\n        } else {\r\n            if (obj.children) {\r\n                obj.children.map((obj_) => getKey(obj_))\r\n                keys.push(obj.key)\r\n            }\r\n        }\r\n    }\r\n    getKey(items)\r\n    return keys\r\n}\r\n\r\nconst getParentKeys = (keys, obj) => {\r\n    const getParent = (k, obj) => {\r\n        let allParentKeys = []\r\n        //get one parent key\r\n        const getParentKey = (key, tree) => {\r\n            let parentKey;\r\n            for (let i = 0; i < tree.length; i++) {\r\n                const node = tree[i];\r\n                if (node.children) {\r\n                    if (node.children.some((item) => item.key === key)) {\r\n                        parentKey = node.key;\r\n                    } else if (getParentKey(key, node.children)) {\r\n                        parentKey = getParentKey(key, node.children);\r\n                    }\r\n                }\r\n            }\r\n            return parentKey;\r\n        }\r\n        const getParentKey_ = (k, obj) => {\r\n            let key = getParentKey(k, obj)\r\n            if (key) {\r\n                allParentKeys.push(key)\r\n                getParentKey_(key, obj)\r\n            }\r\n        }\r\n        getParentKey_(k, obj)\r\n        return allParentKeys\r\n    }\r\n    let parentKeys = keys.map(k => getParent(k, obj))\r\n    let parentKey = []\r\n    for (let i = 0; i < parentKeys.length; i += 1) {\r\n        let element = parentKeys[i]\r\n        for (let j = 0; j < element.length; j += 1) {\r\n            parentKey.push(element[j])\r\n        }\r\n    }\r\n    return parentKey\r\n}\r\n\r\nconst reindex = (index, asString = true, asArray = true) => {\r\n    let r = index\r\n    if (typeof (index) == 'number') {\r\n        if (asArray) {\r\n            r = [asString ? String(index) : index]\r\n        } else {\r\n            r = asString ? String(index) : index\r\n        }\r\n    }\r\n    if (Array.isArray(index) && asString) {\r\n        r = index.map(i => String(i))\r\n    }\r\n    return r\r\n}\r\n\r\nconst getHrefKeys = (items) => {\r\n    let keys = []\r\n\r\n    const getKey = (obj) => {\r\n        if (Array.isArray(obj)) {\r\n            obj.map(obj_ => getKey(obj_))\r\n        } else {\r\n            if (obj.children) {\r\n                obj.children.map((obj_) => getKey(obj_))\r\n            }\r\n            if (obj.href != null) {\r\n                keys.push(obj.key)\r\n            }\r\n        }\r\n    }\r\n    getKey(items)\r\n    return keys\r\n}\r\n\r\nconst parseIcon = (obj) => {\r\n    if (Object.prototype.toString.call(obj) === '[object Object]') {\r\n        return <CustomIcon icon={obj}/>\r\n    }\r\n    return obj\r\n}\r\n\r\nexport {\r\n    deepCopy,\r\n    insertScrollbarStyle,\r\n    getCollapseKeys,\r\n    getHrefKeys,\r\n    getParentKeys,\r\n    reindex,\r\n    parseIcon,\r\n    markdown,\r\n    insertStyle,\r\n    MartineFontSize,\r\n    MartineRadiusSize,\r\n    GetColor, RgbaColor, DarkenColor,LightenColor, getSize, getFlexDirection\r\n};","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {Button, Space, ConfigProvider} from 'antd';\r\nimport {getHrefKeys, insertStyle, GetColor, RgbaColor, MartineRadiusSize, getSize} from \"../js/utils.react\"\r\nimport {CustomIcon, LabelWrap} from \"./utils\";\r\nimport \"../css/buttons.css\"\r\n\r\ninterface ButtonsProp {\r\n    label: any;\r\n    description: any;\r\n    items: any[];\r\n    index: number | null;\r\n    variant: string;\r\n    align: any;\r\n    size: any\r\n    radius: any\r\n    color: any\r\n    direction: \"horizontal\" | \"vertical\" | undefined;\r\n    gap: any;\r\n    use_container_width: boolean;\r\n    return_index: boolean;\r\n    kv: any;\r\n    stValue: any\r\n}\r\n\r\ninterface ButtonProp {\r\n    label: any;\r\n    icon: any;\r\n    disabled: any;\r\n    href: any;\r\n    color: any;\r\n}\r\n\r\nconst AntdButton = (idx: any, type_: any, size: any, color: any, radius: any, props: ButtonProp, onClick: any, isSelect: boolean, grow: boolean) => {\r\n    const textColor = GetColor('--text-color')\r\n    const primary_color = GetColor(props['color'] != null ? props['color'] : color != null ? color : '--primary-color')\r\n    const text_color = props['color'] != null ? props['color'] : textColor\r\n    const linkColor = props['color'] != null ? props['color'] : '#1677ff'\r\n    let selectStyle = `\r\n        #btn-${idx}.ant-btn-default:not(:disabled):active,#btn-${idx}.ant-btn-dashed:not(:disabled):active {\r\n            color: #fff !important;\r\n            border-color: ${primary_color} !important;\r\n            background: ${primary_color} !important;\r\n        }\r\n        #btn-${idx}.ant-btn-primary:not(:disabled):active {\r\n            color: ${primary_color} !important;\r\n            background: transparent !important;\r\n            border-color: ${primary_color} !important;\r\n        }\r\n    `\r\n    let unSelectStyle = `\r\n        #btn-${idx}.ant-btn-primary:not(:disabled):hover{\r\n            box-shadow: 0 0 3px ${primary_color}, 0 0 3px rgba(0, 0, 0, .05);\r\n        }\r\n        #btn-${idx}.ant-btn-text:not(:disabled):hover{\r\n            color:${text_color};\r\n        }\r\n        #btn-${idx}.ant-btn-text{\r\n            color:${text_color};\r\n        }\r\n        #btn-${idx}.ant-btn-text:disabled{\r\n            color:${RgbaColor(textColor, 0.5)};\r\n        }\r\n    `\r\n\r\n    insertStyle(`sac.buttons${idx}.style`, isSelect ? selectStyle : unSelectStyle)\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Button: {\r\n                        colorText: isSelect ? textColor : primary_color,\r\n                        colorTextDisabled: RgbaColor(textColor, 0.5),\r\n                        colorPrimary: primary_color,\r\n                        colorBgContainerDisabled: 'transform',\r\n                        colorBgContainer: 'transform',\r\n                        colorPrimaryHover: primary_color,\r\n                        colorPrimaryActive: primary_color,\r\n                        colorBgTextHover: RgbaColor(textColor, 0.1),\r\n                        colorLink: linkColor,\r\n                        colorLinkHover: linkColor,\r\n                        colorLinkActive: linkColor,\r\n                        // controlHeight: 3 * getSize(size) - 10,\r\n                        fontSize: getSize(size),\r\n                        colorBorder: isSelect ? RgbaColor(textColor) : primary_color,\r\n                        borderRadius: getSize(radius, MartineRadiusSize),\r\n                        fontFamily: 'var(--font)'\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <Button\r\n                id={`btn-${idx}`}\r\n                key={idx}\r\n                type={type_}\r\n                onClick={() => onClick(idx)}\r\n                disabled={props['disabled']}\r\n                href={props['href'] ? props['href'] : undefined}\r\n                target={'_blank'}\r\n                icon={props['icon'] && <CustomIcon icon={props.icon}/>}\r\n            >\r\n                {props['label']}\r\n            </Button>\r\n        </ConfigProvider>\r\n    )\r\n}\r\n\r\nconst AntdButtons = (props: ButtonsProp) => {\r\n    //get data\r\n    const label = props['label']\r\n    const description = props['description']\r\n    const items = props['items']\r\n    const index = props['index']\r\n    let variant = props['variant']\r\n    variant = variant === 'outline' ? 'default' : variant === 'filled' ? 'primary' : variant\r\n    const align = props['align']\r\n    const size = props['size']\r\n    const radius = props['radius']\r\n    const color = props['color']\r\n    const direction = props['direction']\r\n    const gap = props['gap']\r\n    const grow = props['use_container_width']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n    const textColor = GetColor('--text-color')\r\n\r\n    //load custom style\r\n    let style = `      \r\n        .ant-btn-primary:disabled{\r\n            color: ${RgbaColor(textColor, 0.5)} !important;\r\n            background: ${RgbaColor(textColor, 0.1)} !important;\r\n            border-color: ${RgbaColor(textColor, 0.1)} !important;\r\n        }\r\n        .ant-btn-dashed:disabled,.ant-btn-default:disabled{\r\n            border-color: ${RgbaColor(textColor, 0.1)} !important;\r\n        }\r\n        .ant-btn {\r\n            min-height: ${3 * getSize(size) - 10}px;\r\n            min-width: ${3 * getSize(size) - 10}px;\r\n            width: ${grow ? '100%' : 'auto'} !important;\r\n            padding: ${getSize(size) * 0.3}px ${getSize(size) * 0.8}px;\r\n        }\r\n        .ant-btn.ant-btn-icon-only{\r\n            padding:${getSize(size) * 0.3}px\r\n        }\r\n        .ant-space-compact .ant-btn{\r\n            flex-grow:${grow ? 1 : undefined}\r\n        }\r\n    `\r\n    insertStyle(`sac.buttons.style`, style)\r\n\r\n    //state\r\n    const [selected, setSelected] = useState(index)\r\n\r\n    // set timeout to render component height\r\n    useEffect(() => {\r\n        setTimeout(() => Streamlit.setFrameHeight(), 0.01)\r\n    })\r\n\r\n    //listen index\r\n    const prevIndex = useRef(props['index'])\r\n    const prevStValue = useRef(props['stValue'])\r\n    useEffect(() => {\r\n        const i = props['index']\r\n        const st_i = props['stValue']\r\n        if (i !== prevIndex.current && i !== null) {\r\n            setSelected(i);\r\n            Streamlit.setComponentValue(return_index ? i : kv[i]);\r\n            prevIndex.current = props['index']\r\n        }\r\n        if (st_i !== prevStValue.current) {\r\n            setSelected(st_i);\r\n            Streamlit.setComponentValue(return_index ? st_i : kv[st_i]);\r\n            prevStValue.current = props['stValue']\r\n        }\r\n    }, [props, kv, return_index])\r\n\r\n    //callback\r\n    const onClick = (idx: number) => {\r\n        //not href index\r\n        if (getHrefKeys(items).indexOf(idx) === -1) {\r\n            setSelected(idx)\r\n            Streamlit.setComponentValue(return_index ? idx : kv[idx])\r\n        }\r\n    }\r\n\r\n    const buttonGroup = items.map((item: any, idx) => {\r\n            let otherType = ['primary', 'default'].find((x) => x !== variant)\r\n            let type_: any = index != null ? selected === idx ? otherType : variant : variant\r\n            return AntdButton(idx, type_, size, color, radius, item, onClick, index != null, grow)\r\n        }\r\n    )\r\n\r\n\r\n    return (\r\n        <LabelWrap\r\n            label={label}\r\n            desc={description}\r\n            size={size}\r\n            align={align}\r\n            grow={grow}\r\n            children={\r\n                typeof (gap) == 'number' && gap === 0 ?\r\n                    <Space.Compact direction={direction}>\r\n                        {buttonGroup}\r\n                    </Space.Compact> :\r\n                    <Space direction={direction} wrap={true} size={4 * getSize(gap) - 46}\r\n                           classNames={{item: grow ? 'flex-fill' : ''}}>\r\n                        {buttonGroup}\r\n                    </Space>\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default AntdButtons\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect} from \"react\";\r\nimport {Space, Tag, ConfigProvider} from 'antd';\r\nimport {MartineRadiusSize, GetColor, RgbaColor, getSize, insertStyle} from \"../js/utils.react\";\r\nimport {CustomIcon} from \"./utils\";\r\n\r\ninterface tagProp {\r\n    label: any\r\n    color: any\r\n    radius: any\r\n    size: any\r\n    icon: any\r\n    link: any\r\n    bordered: any\r\n    closable: any\r\n}\r\n\r\ninterface TagsProp {\r\n    items: tagProp[]\r\n    align?: string\r\n    direction?: \"horizontal\" | \"vertical\"\r\n    size?: any\r\n    radius?: any\r\n    color?: any\r\n    style?: React.CSSProperties\r\n}\r\n\r\nconst AntdTag = (props: tagProp) => {\r\n    //get data\r\n    const label = props['label'];\r\n    const color = props['color'];\r\n    const radius = props['radius'] || 'md';\r\n    const size = props['size'] || 'sm';\r\n    const icon = props['icon'];\r\n    const link = props['link'];\r\n    const bordered = props['bordered'];\r\n    const closable = props['closable'];\r\n    const textColor = GetColor('--text-color')\r\n\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Tag: {\r\n                        defaultColor: 'var(--text-color)',\r\n                        defaultBg: RgbaColor(textColor, 0.05),\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <Tag\r\n                color={color}\r\n                icon={<CustomIcon icon={icon} style={{marginRight: label ? 5 : 0}}/>}\r\n                closeIcon={closable}\r\n                bordered={bordered}\r\n                style={{\r\n                    margin: 0,\r\n                    borderRadius: getSize(radius, MartineRadiusSize),\r\n                    fontSize: getSize(size),\r\n                    paddingInline: getSize(size) * 0.5,\r\n                    lineHeight: `${getSize(size) * 1.1}px`,\r\n                }}\r\n            >\r\n                {link ?\r\n                    <a href={link} target={'_blank'} rel={'noreferrer'} className={'text-decoration-none'}\r\n                       style={{color: 'inherit'}}>{label}</a> : label}\r\n            </Tag>\r\n        </ConfigProvider>\r\n    );\r\n}\r\n\r\nconst AntdTags = (props: TagsProp) => {\r\n    //get data\r\n    const items = props['items'];\r\n    const align = props['align'];\r\n    const direction = props['direction'];\r\n    const size = props['size'];\r\n    const radius = props['radius'];\r\n    const color = props['color'];\r\n    const style = props['style'];\r\n\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    let tagStyle = `\r\n        .anticon.anticon-close.ant-tag-close-icon{\r\n            color: inherit;\r\n            font-size: ${getSize(size) - 4}px;\r\n        }\r\n    `\r\n    insertStyle('sac.tags.style', tagStyle)\r\n\r\n    return <ConfigProvider\r\n        theme={{\r\n            components: {\r\n                Tag: {\r\n                    defaultColor: 'var(--text-color)',\r\n                    defaultBg: RgbaColor(GetColor('--text-color'), 0.05),\r\n                    colorFillSecondary: RgbaColor(GetColor('--primary-color'), 0.1),\r\n                    colorPrimary: 'var(--primary-color)',\r\n                    colorPrimaryActive: 'var(--primary-color)',\r\n                    colorPrimaryHover: 'var(--primary-color)',\r\n                },\r\n            },\r\n        }}\r\n    >\r\n        <Space\r\n            className={`${direction === 'horizontal' && 'd-flex'} justify-content-${align} flex-wrap align-items-center`}\r\n            direction={direction}\r\n            size={5}\r\n            style={style}\r\n            classNames={{item: 'd-flex align-items-center'}}\r\n        >\r\n            {items.map((item: any) => {\r\n                item.size = item.size || size\r\n                item.radius = item.radius || radius\r\n                item.color = item.color || color\r\n                return AntdTag(item)\r\n            })}\r\n        </Space>\r\n    </ConfigProvider>\r\n};\r\n\r\nexport {AntdTags, AntdTag}\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {Tabs, ConfigProvider} from 'antd';\r\nimport {strToNode} from \"../js/tabs.react\";\r\nimport {GetColor, RgbaColor, insertStyle, getSize} from \"../js/utils.react\"\r\nimport '../css/tabs.css'\r\n\r\ninterface TabsProp {\r\n    items: any[];\r\n    index: string;\r\n    align: string;\r\n    position: any;\r\n    variant: any;\r\n    height: number | null;\r\n    use_container_width: boolean;\r\n    size: any\r\n    color: any;\r\n    return_index: boolean;\r\n    kv: any;\r\n    stValue: any\r\n}\r\n\r\nconst AntdTabs = (props: TabsProp) => {\r\n    //get data\r\n    const items = strToNode(props['items'],props['size'])\r\n    const index = props['index']\r\n    const align = props['align']\r\n    const position = props['position']\r\n    const variant = props['variant']\r\n    const height = props['height']\r\n    const grow = props['use_container_width']\r\n    const size = props['size']\r\n    const color = props['color']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n    const primaryColor = GetColor(color == null ? '--primary-color' : color)\r\n    const textColor = GetColor('--text-color')\r\n    const borderColor = RgbaColor(textColor, 0.1)\r\n    const bgColor = GetColor('--background-color')\r\n\r\n    const [activeKey, setActiveKey] = useState(index)\r\n\r\n    // load style\r\n    let style = `\r\n        .ant-tabs-nav-wrap{\r\n            justify-content: ${align};\r\n        }\r\n        .ant-tabs-nav:before {\r\n            border-bottom: ${variant === 'default' ? 2 : 1}px solid ${borderColor} !important;\r\n        }\r\n        .ant-tabs-right > .ant-tabs-content-holder {\r\n            margin-right: -2px;\r\n            border-right: 2px solid ${borderColor};\r\n        }\r\n        .ant-tabs-left > .ant-tabs-content-holder {\r\n            margin-left: -2px;\r\n            border-left: 2px solid ${borderColor};\r\n        }\r\n        .ant-tabs-card .ant-tabs-tab{\r\n            border-radius: ${position === 'top' ? '8px 8px 0 0' :\r\n        position === 'bottom' ? '0 0 8px 8px' :\r\n            position === 'left' ? '8px 0 0 8px' :\r\n                position === 'right' ? '0 8px 8px 0' : '8px'} !important\r\n        }\r\n        .ant-tabs-card .ant-tabs-tab-active{\r\n            border-width: 1px;\r\n            border-style: solid;\r\n            border-color: ${position === 'top' ? `${borderColor} ${borderColor} ${bgColor} ${borderColor}` :\r\n        position === 'bottom' ? `${bgColor} ${borderColor} ${borderColor} ${borderColor}` :\r\n            position === 'left' ? `${borderColor} ${bgColor} ${borderColor} ${borderColor}` :\r\n                position === 'right' ? `${borderColor} ${borderColor} ${borderColor} ${bgColor}` : ''} !important\r\n        }\r\n        `\r\n    let growStyle = `\r\n        .ant-tabs-tab{\r\n            flex-grow: 1;\r\n        }\r\n        .ant-tabs-nav-list{\r\n            flex-grow: 1;\r\n        }\r\n    `\r\n    insertStyle('sac.tabs.style', grow ? style + growStyle : style)\r\n\r\n    //component height\r\n    let tabsHeight = ['left', 'right'].includes(position) && height != null ? height : undefined\r\n\r\n    // set component height\r\n    useEffect(() => Streamlit.setFrameHeight(tabsHeight))\r\n\r\n    //callback\r\n    const onClick = (key: string) => {\r\n        setActiveKey(key)\r\n        Streamlit.setComponentValue(return_index ? key : kv[key])\r\n    }\r\n\r\n    //listen index and stIndex\r\n    const prevIndex = useRef(props['index'])\r\n    const prevStValue = useRef(props['stValue'])\r\n    useEffect(() => {\r\n        const i = props['index']\r\n        const st_i = props['stValue']\r\n        if (i !== prevIndex.current && i !== null) {\r\n            setActiveKey(i);\r\n            Streamlit.setComponentValue(return_index ? i : kv[i]);\r\n            prevIndex.current = props['index']\r\n        }\r\n        if (st_i !== prevStValue.current) {\r\n            setActiveKey(st_i);\r\n            Streamlit.setComponentValue(return_index ? st_i : kv[st_i]);\r\n            prevStValue.current = props['stValue']\r\n        }\r\n    }, [props, kv, return_index])\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Tabs: {\r\n                        itemActiveColor: primaryColor,\r\n                        itemHoverColor: primaryColor,\r\n                        itemSelectedColor: primaryColor,\r\n                        inkBarColor: primaryColor,\r\n                        colorBgContainer: bgColor,\r\n                        colorText: 'var(--text-color)',\r\n                        colorTextDisabled: RgbaColor(textColor, 0.5),\r\n                        colorPrimary: primaryColor,\r\n                        colorBgContainerDisabled: 'transform',\r\n                        fontSize: getSize(size),\r\n                        fontFamily: 'var(--font)',\r\n                        cardBg: 'transparent',\r\n                        cardGutter: variant === 'outline' ? 0 : 2,\r\n                        cardHeight: getSize(size) + 25,\r\n                        colorBorderSecondary: 'transparent',\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <Tabs\r\n                items={items}\r\n                defaultActiveKey={index}\r\n                activeKey={activeKey}\r\n                onTabClick={onClick}\r\n                type={variant === 'default' ? 'line' : 'card'}\r\n                tabPosition={position}\r\n                style={{height: tabsHeight}}\r\n            />\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdTabs\r\n","import React from \"react\";\r\nimport {deepCopy, getSize} from \"./utils.react\"\r\nimport {CustomIcon} from \"../ts/utils\";\r\nimport {AntdTags} from \"../ts/Tag\";\r\n\r\n//recurve str property to react node\r\nconst strToNode = (obj, size) => {\r\n    return obj.map((item, idx) => {\r\n        let obj_copy = deepCopy(item)\r\n        obj_copy['key'] = idx\r\n        const icon = obj_copy['icon']\r\n        const tag = obj_copy['tag']\r\n        //add tag\r\n        if (tag) {\r\n            obj_copy.label = <div className={'d-flex align-items-center'}>\r\n                <div className={'mr-1'}>{obj_copy.label}</div>\r\n                <AntdTags\r\n                    items={Array.isArray(tag) ? tag : [tag]}\r\n                    align={'end'}\r\n                    size={getSize(size) - 4}\r\n                    style={{lineHeight: 1.2}}\r\n                />\r\n            </div>\r\n        }\r\n        //add icon\r\n        if (icon) {\r\n            obj_copy.label = <div className={'d-flex align-items-center'}>\r\n                <CustomIcon icon={icon} style={{marginRight: obj_copy.label ? 5 : 0}}/>\r\n                <div className={'d-flex  flex-grow-1'}>{obj_copy.label}\r\n                </div>\r\n            </div>\r\n        }\r\n        return obj_copy\r\n    })\r\n}\r\n\r\nexport {strToNode}","import React from \"react\";\r\nimport {deepCopy, getSize} from \"./utils.react\";\r\nimport {AntdTags} from \"../ts/Tag\";\r\nimport {CustomIcon} from \"../ts/utils\";\r\n\r\n//recurve str property to react node\r\nconst strToNode = (obj, size, variant, desc_color) => {\r\n    if (Array.isArray(obj)) {\r\n        return obj.map(obj_ => strToNode(obj_, size, variant, desc_color))\r\n    } else {\r\n        let obj_copy = deepCopy(obj);\r\n        const icon = obj_copy.icon;\r\n        const href = obj_copy.href;\r\n        const key = obj_copy.key;\r\n        const tag = obj_copy.tag;\r\n        const description = obj_copy.description;\r\n        const type = obj_copy.type;\r\n        obj_copy.key = String(key)\r\n        if (obj_copy.children) {\r\n            obj_copy.children = obj_copy.children.map(obj_ => strToNode(obj_, size, variant, desc_color))\r\n        }\r\n        //icon\r\n        obj_copy.icon = <CustomIcon icon={icon} style={{marginRight: 10, fontSize: getSize(size) + 3}}/>\r\n        //add description\r\n        if (description) {\r\n            obj_copy.label = <div style={{lineHeight: 1.3}}>\r\n                <div style={{wordBreak: 'break-word'}}>{obj_copy.label}</div>\r\n                <div className={'menu-desc'} style={{\r\n                    color: desc_color,\r\n                    fontSize: getSize(size) - 2,\r\n                    wordBreak: 'break-word',\r\n                    fontWeight: 'normal'\r\n                }}>{description}</div>\r\n            </div>\r\n        }\r\n        //add tag\r\n        if (tag) {\r\n            obj_copy.label = <div className={'d-flex align-items-center justify-content-between'}>\r\n                <div className={'mr-3'}>{obj_copy.label}</div>\r\n                <AntdTags\r\n                    items={Array.isArray(tag) ? tag : [tag]}\r\n                    align={'end'}\r\n                    size={getSize(size) - 2}\r\n                />\r\n            </div>\r\n        }\r\n        //add group icon\r\n        if (type === 'group' && icon) {\r\n            obj_copy.label = <div className={'d-flex align-items-center'}>\r\n                {obj_copy.icon}\r\n                <div style={{flexGrow: 1}}>{obj_copy.label}</div>\r\n            </div>\r\n        }\r\n        //add href\r\n        if (href) {\r\n            obj_copy.label =\r\n                <a href={href} target='_blank' rel='noreferrer' className={'text-decoration-none'}\r\n                   style={{color: 'inherit'}}>{obj_copy.label}</a>\r\n        }\r\n        return obj_copy\r\n    }\r\n}\r\n\r\n\r\nexport {strToNode}","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport type {MenuProps} from 'antd';\r\nimport {ConfigProvider, Menu} from 'antd';\r\nimport {strToNode} from \"../js/menu.react\";\r\nimport {\r\n    getCollapseKeys, getHrefKeys, getParentKeys, reindex,\r\n    insertStyle, GetColor, RgbaColor, getSize\r\n} from \"../js/utils.react\"\r\nimport '../css/menu.css'\r\n\r\ninterface MenuProp {\r\n    items: any[];\r\n    index: any;\r\n    open_index: any;\r\n    open_all: boolean;\r\n    size: any\r\n    color: any\r\n    variant: any\r\n    indent: any;\r\n    height: any;\r\n    return_index: boolean;\r\n    kv: any;\r\n    stValue: any\r\n}\r\n\r\n\r\nconst AntdMenu = (props: MenuProp) => {\r\n    const textColor = GetColor('--text-color')\r\n    //get data\r\n    const items = strToNode(props.items, props.size, props.variant, RgbaColor(textColor, 0.5))\r\n    const dsk = reindex(props.index)\r\n    const openIndex = reindex(props.open_index)\r\n    const openAll = props['open_all']\r\n    const size = props['size']\r\n    const color = props['color']\r\n    const variant = props['variant']\r\n    const indent = props['indent']\r\n    const height = props['height']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n    const dok = openAll ? getCollapseKeys(items) : openIndex ? openIndex : dsk && getParentKeys(dsk, items)\r\n    const primaryColor = GetColor(color == null ? '--primary-color' : color)\r\n    const primaryLightColor = RgbaColor(primaryColor)\r\n    const bgColor = GetColor('--background-color')\r\n\r\n    //custom style\r\n    const textStyle = `\r\n    li.ant-menu-item.ant-menu-item-selected .menu-desc{\r\n        color: ${variant === 'filled' ? RgbaColor('#fff', 0.55) : 'none'} !important\r\n    }\r\n    .ant-menu-submenu-selected > .ant-menu-submenu-title{\r\n        color:${primaryColor} !important\r\n    }\r\n    .ant-menu-item-group-title{\r\n        margin: 4px !important;\r\n        padding: 0 16px 0 ${indent}px !important\r\n    }\r\n    .ant-menu-item-group-list>li{\r\n        padding-left: ${2 * indent}px !important\r\n    }\r\n    .ant-menu-item.ant-menu-item-selected{\r\n        border-left:${variant === 'left-bar' ? `4px solid ${primaryColor}` : 'unset'} !important;\r\n        border-right:${variant === 'right-bar' ? `4px solid ${primaryColor}` : 'unset'} !important;\r\n    }\r\n    .ant-menu-item{\r\n        border-left-style:${variant === 'left-bar' ? 'solid' : 'unset'} !important;\r\n        border-left-color:${variant === 'left-bar' ? 'transparent' : 'unset'} !important;\r\n        border-left-width:${variant === 'left-bar' ? `4px` : 'unset'} !important;\r\n        border-right-style:${variant === 'right-bar' ? 'solid' : 'unset'} !important;\r\n        border-right-color:${variant === 'right-bar' ? 'transparent' : 'unset'} !important;\r\n        border-right-width:${variant === 'right-bar' ? `4px` : 'unset'} !important;\r\n        padding-top: ${getSize(size) * 0.5}px;\r\n        padding-bottom: ${getSize(size) * 0.5}px;\r\n    }\r\n    .ant-menu-submenu-title {\r\n        padding-top: ${getSize(size) * 0.5}px;\r\n        padding-bottom: ${getSize(size) * 0.5}px;\r\n    }\r\n    `\r\n    insertStyle(`sac.menu.style`, textStyle)\r\n\r\n    //state\r\n    const [selectKey, setSelectKey] = useState(dsk)\r\n\r\n    //component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    //listen index\r\n    const prevIndex = useRef(props['index'])\r\n    const prevStValue = useRef(props['stValue'])\r\n    useEffect(() => {\r\n        const i = props['index']\r\n        const st_i = props['stValue']\r\n        if (i !== prevIndex.current) {\r\n            setSelectKey(reindex(i));\r\n            Streamlit.setComponentValue(return_index ? i : kv[i]);\r\n            prevIndex.current = props['index']\r\n        }\r\n        if (st_i !== prevStValue.current) {\r\n            setSelectKey(reindex(st_i));\r\n            Streamlit.setComponentValue(return_index ? st_i : kv[st_i]);\r\n            prevStValue.current = props['stValue']\r\n        }\r\n    }, [props, kv, return_index])\r\n\r\n\r\n    //callback\r\n    const onSelect: MenuProps['onSelect'] = (e) => {\r\n        //only not href item will fire\r\n        let hrefKeys = getHrefKeys(items)\r\n        if (hrefKeys.indexOf(e.key) === -1) {\r\n            setSelectKey([e.key]);\r\n            Streamlit.setComponentValue(return_index ? Number(e.key) : kv[Number(e.key)]);\r\n        }\r\n    }\r\n    const onOpenChange: MenuProps['onOpenChange'] = (e) => {\r\n        const stValue = return_index ? Number(selectKey[0]) : kv[Number(selectKey[0])]\r\n        //set time to rerender\r\n        setTimeout(() => Streamlit.setComponentValue(stValue), 200)\r\n    }\r\n\r\n    // antd menu component\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Menu: {\r\n                        itemBorderRadius: variant === 'left-bar' || variant === 'right-bar' ? 0 : 8,\r\n                        itemColor: 'var(--text-color)',\r\n                        groupTitleColor: RgbaColor(textColor, 0.5),\r\n                        itemDisabledColor: RgbaColor(textColor, 0.5),\r\n                        itemHoverColor: 'var(--text-color)',\r\n                        itemHoverBg: RgbaColor(textColor),\r\n                        itemActiveBg: RgbaColor(textColor, 0.25),\r\n                        itemSelectedColor: variant === 'filled' ? '#fff' : primaryColor,\r\n                        itemSelectedBg: variant === 'filled' ? primaryColor : variant === 'subtle' ? bgColor : primaryLightColor,\r\n                        subMenuItemBg: bgColor,\r\n                        itemBg: bgColor,\r\n                        colorSplit: RgbaColor(textColor),\r\n                        fontFamily: 'var(--font)',\r\n                        fontSize: getSize(size),\r\n                        itemHeight: getSize(size) + 5,\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <Menu\r\n                onSelect={onSelect}\r\n                onOpenChange={onOpenChange}\r\n                selectedKeys={selectKey}\r\n                style={{borderRightWidth: 0, height: height, overflowY: 'auto'}}\r\n                defaultSelectedKeys={dsk}\r\n                defaultOpenKeys={dok}\r\n                mode={'inline'}\r\n                items={items}\r\n                inlineIndent={indent}\r\n                className={'text-wrap text-break'}\r\n                subMenuCloseDelay={0}\r\n            />\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdMenu\r\n","import React from \"react\";\r\nimport {deepCopy, getSize} from \"./utils.react\";\r\nimport {AntdTags} from \"../ts/Tag\";\r\nimport {ConfigProvider, Tooltip} from \"antd\";\r\nimport {CustomIcon} from \"../ts/utils\";\r\n\r\n//recurve str property to react node\r\nconst strToNode = (obj, size, treeIcon, desc_color) => {\r\n    if (Array.isArray(obj)) {\r\n        return obj.map(obj_ => strToNode(obj_, size, treeIcon, desc_color))\r\n    } else {\r\n        let obj_copy = deepCopy(obj);\r\n        const itemIcon = obj_copy.icon;\r\n        const tag = obj_copy.tag;\r\n        const description = obj_copy.description;\r\n        const tooltip = obj_copy.tooltip;\r\n        const icon = itemIcon != null ? itemIcon : treeIcon !== null ? treeIcon : null\r\n        if (obj_copy.children) {\r\n            obj_copy.children = obj_copy.children.map(obj_ => strToNode(obj_, size, treeIcon, desc_color))\r\n        }\r\n        //add description\r\n        if (description) {\r\n            obj_copy.label = <div style={{lineHeight: 1.2, wordBreak: 'break-word', whiteSpace: 'break-spaces'}}>\r\n                <div>{obj_copy.label}</div>\r\n                <div className={'tree-desc'}\r\n                     style={{color: desc_color, fontSize: getSize(size) - 2}}>{description}</div>\r\n            </div>\r\n        }\r\n        //add tag\r\n        if (tag) {\r\n            obj_copy.label = <div className={'d-flex align-items-center justify-content-between flex-grow-1'}>\r\n                <div className={'mr-3'}>{obj_copy.label}</div>\r\n                <AntdTags\r\n                    items={Array.isArray(tag) ? tag : [tag]}\r\n                    align={'end'}\r\n                    size={getSize(size) - 4}\r\n                />\r\n            </div>\r\n        }\r\n        //add icon\r\n        if (icon) {\r\n            obj_copy.label = <div className={'d-flex align-items-center'}>\r\n                <CustomIcon icon={icon} style={{marginRight: 5, alignSelf: 'start'}}/>\r\n                <div className={'d-flex  flex-grow-1'}>{obj_copy.label}\r\n                </div>\r\n            </div>\r\n        }\r\n        //add tooltip\r\n        if (tooltip) {\r\n            obj_copy.label = <ConfigProvider\r\n                theme={{\r\n                    components: {\r\n                        Tooltip: {\r\n                            colorBgSpotlight: 'var(--background-color)',\r\n                            colorTextLightSolid: 'var(--text-color)',\r\n                            borderRadius: 6,\r\n                            controlHeight: 12,\r\n                            fontSize: getSize(size) - 4,\r\n                        },\r\n                    },\r\n                }}\r\n            >\r\n                <Tooltip\r\n                    title={tooltip}\r\n                    placement={'bottomLeft'}\r\n                    arrow={false}\r\n                    overlayInnerStyle={{padding: '2px 6px', border: `1px solid ${desc_color}`}}\r\n                >\r\n                    {obj_copy.label}\r\n                </Tooltip>\r\n            </ConfigProvider>\r\n        }\r\n        obj_copy['title'] = obj_copy.label\r\n        delete obj_copy.label\r\n        delete obj_copy.icon\r\n        return obj_copy\r\n    }\r\n}\r\n\r\n\r\nexport {strToNode}","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport type {TreeProps} from 'antd/es/tree';\r\nimport {Tree, ConfigProvider} from 'antd';\r\nimport {CaretDownFilled} from '@ant-design/icons';\r\nimport {strToNode} from \"../js/tree.react\";\r\nimport {reindex, getCollapseKeys, getParentKeys, insertStyle, GetColor, RgbaColor, getSize} from \"../js/utils.react\"\r\nimport '../css/tree.css'\r\nimport {LabelWrap} from \"./utils\";\r\n\r\ninterface TreeProp {\r\n    label: any\r\n    description: any\r\n    items: any[]\r\n    index: any\r\n    icon: any\r\n    size: any\r\n    color: any\r\n    align: any\r\n    width: any\r\n    height: any\r\n    open_index: any\r\n    open_all: boolean\r\n    checkbox: boolean\r\n    checkbox_strict: boolean\r\n    show_line: boolean\r\n    return_index: boolean;\r\n    kv: any;\r\n}\r\n\r\nconst AntdTree = (props: TreeProp) => {\r\n    const textColor = GetColor('--text-color')\r\n    //get data\r\n    const label = props['label']\r\n    const description = props['description']\r\n    const size = props['size']\r\n    const items = strToNode(props.items, size, props.icon, RgbaColor(textColor, 0.5))\r\n    const dsk = reindex(props.index, false)\r\n    const openIndex = reindex(props.open_index, false)\r\n    const openAll = props['open_all']\r\n    const color = props['color']\r\n    const height = props['height']\r\n    const width = props['width']\r\n    const align = props['align']\r\n    const checkable = props['checkbox']\r\n    const checkStrictly = props['checkbox_strict']\r\n    const showLine = props['show_line']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n    const dok = openAll ? getCollapseKeys(items) : openIndex ? openIndex : dsk && getParentKeys(dsk, items)\r\n    const primaryColor = GetColor(color == null ? '--primary-color' : color)\r\n    const primaryLightColor = RgbaColor(primaryColor)\r\n\r\n    //state\r\n    const [value, setValue] = useState(dsk)\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    const textStyle = `\r\n    span.ant-tree-node-content-wrapper.ant-tree-node-selected {\r\n        color: ${primaryColor};\r\n    }\r\n    .ant-tree-switcher-icon {\r\n        font-size: ${getSize(size) - 2}px !important;\r\n    }\r\n    .ant-tree-title{\r\n        line-height:${getSize(size)+2}px !important\r\n    }\r\n    .ant-tree-checkbox-indeterminate .ant-tree-checkbox-inner:after{\r\n        width:50% !important;\r\n        height:50% !important;\r\n    }\r\n    `\r\n    insertStyle(`sac.tree.style`, textStyle)\r\n\r\n    //callback\r\n    const onExpand: TreeProps['onExpand'] = (e) => {\r\n        Streamlit.setComponentValue(value.map((x: any) => return_index ? x : kv[x]));\r\n    };\r\n    const onSelect: TreeProps['onSelect'] = (selectedKeys_, info) => {\r\n        setValue(selectedKeys_)\r\n        Streamlit.setComponentValue(checkable ?\r\n            selectedKeys_.map((x: any) => return_index ? x : kv[x]) :\r\n            return_index ? selectedKeys_[0] : kv[selectedKeys_[0]]);\r\n    };\r\n    const onCheck: TreeProps['onCheck'] = (checkedKeys_, info) => {\r\n        let ck = (Array.isArray(checkedKeys_)) ? checkedKeys_ : checkedKeys_['checked']\r\n        setValue(ck)\r\n        Streamlit.setComponentValue(ck.map((x: any) => return_index ? x : kv[x]))\r\n    }\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Tree: {\r\n                        colorPrimary: primaryColor,\r\n                        colorPrimaryHover: primaryColor,\r\n                        colorBgContainer: 'transform',\r\n                        colorText: 'var(--text-color)',\r\n                        colorTextDisabled: RgbaColor(textColor, 0.5),\r\n                        controlItemBgHover: RgbaColor(textColor),\r\n                        controlItemBgActive: primaryLightColor,\r\n                        controlInteractiveSize: getSize(size) + 2,\r\n                        fontSize: getSize(size),\r\n                        fontFamily: 'var(--font)',\r\n                        colorBorder: RgbaColor(textColor, 0.4),\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <LabelWrap\r\n                label={label}\r\n                desc={description}\r\n                size={size}\r\n                align={align}\r\n                children={\r\n                    <Tree\r\n                        onSelect={onSelect}\r\n                        onCheck={onCheck}\r\n                        onExpand={onExpand}\r\n                        selectedKeys={value}\r\n                        checkedKeys={value}\r\n                        defaultSelectedKeys={dsk}\r\n                        defaultCheckedKeys={dsk}\r\n                        defaultExpandedKeys={dok}\r\n                        treeData={items}\r\n                        showLine={showLine}\r\n                        checkable={checkable}\r\n                        selectable={!checkable}\r\n                        height={height}\r\n                        checkStrictly={checkStrictly}\r\n                        switcherIcon={<CaretDownFilled/>}\r\n                        blockNode={true}\r\n                        virtual={false}\r\n                        style={{\r\n                            whiteSpace: 'nowrap', overflowX: 'auto', overflowY: 'hidden', width: width\r\n                        }}\r\n                    />\r\n                }\r\n            />\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdTree\r\n","import React from \"react\";\r\nimport {deepCopy} from \"./utils.react\";\r\nimport {CustomIcon} from \"../ts/utils\";\r\n\r\n//recurve str property to react node\r\nconst strToNode = (obj) => {\r\n    if (Array.isArray(obj)) {\r\n        return obj.map(obj_ => strToNode(obj_))\r\n    } else {\r\n        let obj_copy = deepCopy(obj);\r\n        const icon = obj_copy.icon;\r\n        const label = obj_copy.label;\r\n        if (obj_copy.children != null) {\r\n            obj_copy.children = obj_copy.children.map(obj_ => strToNode(obj_))\r\n        }\r\n        if (icon) {\r\n            obj_copy.label = <span key={obj_copy.value}><CustomIcon icon={icon} style={{marginRight: 5}}/>{label}</span>\r\n        } else {\r\n            obj_copy.label = <span key={obj_copy.value}>{label}</span>\r\n        }\r\n        obj_copy['rawLabel'] = label\r\n        return obj_copy\r\n    }\r\n}\r\n\r\nexport {strToNode}","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Cascader, ConfigProvider} from 'antd';\r\nimport {CaretDownFilled, CaretRightFilled} from '@ant-design/icons';\r\nimport type {DefaultOptionType} from 'antd/es/cascader';\r\nimport {strToNode} from \"../js/cascader.react\";\r\nimport {reindex, GetColor, RgbaColor, insertStyle} from \"../js/utils.react\"\r\nimport '../css/cascader.css'\r\nimport {LabelWrap} from \"./utils\";\r\n\r\ninterface CascaderProp {\r\n    label: any\r\n    description: any\r\n    items: any[]\r\n    index: any\r\n    placeholder: any\r\n    disabled: boolean\r\n    clear: boolean\r\n    color: any\r\n    search: boolean\r\n    multiple: boolean\r\n    strict: boolean\r\n    return_index: boolean;\r\n    kv: any;\r\n}\r\n\r\nconst AntdCascader = (props: CascaderProp) => {\r\n    //get data\r\n    const label = props['label']\r\n    const description = props['description']\r\n    const items = strToNode(props.items)\r\n    const index = reindex(props['index'], false)\r\n    const placeholder = props['placeholder']\r\n    const multiple = props['multiple']\r\n    const disabled = props['disabled']\r\n    const search = props['search']\r\n    const color = props['color']\r\n    const allowClear = props['clear']\r\n    const strict = props['strict']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n    const primaryColor = GetColor(color == null ? '--primary-color' : color)\r\n    const textColor = GetColor('--text-color')\r\n\r\n    // load css\r\n    let borderStyle = `\r\n        /*dropdown border*/\r\n        .ant-select-dropdown {\r\n            border: 1px solid ${RgbaColor(textColor, 0.1)};\r\n        }\r\n        /*vertical border*/\r\n        ul.ant-cascader-menu:not(:last-child) {\r\n            border-inline-end: 1px solid ${RgbaColor(textColor, 0.1)} !important;\r\n        }\r\n        .ant-cascader-menu-item-active .ant-cascader-menu-item-content{\r\n            color:${primaryColor} !important\r\n        }\r\n    `\r\n    let checkboxStyle = `\r\n        .ant-select-selection-item{\r\n            color: rgb(255, 255, 255);\r\n        }\r\n    `\r\n    insertStyle('sac.cascader.style', multiple ? borderStyle + checkboxStyle : borderStyle)\r\n\r\n    //state\r\n    const [height, setHeight] = useState()\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight(height))\r\n\r\n    //callback\r\n    const onChange = (value: any) => {\r\n        let v = value === undefined ? [] : value\r\n        let flatten_value = Array.from(new Set(v.flat())).sort()\r\n        const st = flatten_value.map((x: any) => return_index ? x : kv[x])\r\n        Streamlit.setComponentValue(st)\r\n    }\r\n    const dropdownVisible = (visible: boolean) => {\r\n        let labelHeight = label !== null ? 30 : 0\r\n        // @ts-ignore\r\n        setHeight(visible ? 230 + labelHeight : undefined)\r\n    }\r\n\r\n    //search\r\n    const filter = (inputValue: string, path: DefaultOptionType[]) => {\r\n        return path.some(\r\n            (option) => (option.rawLabel as string).toLowerCase().indexOf(inputValue.toLowerCase()) > -1,\r\n        )\r\n    }\r\n    // search not found\r\n    const notFoundContent = () => {\r\n        return <div style={{\r\n            textAlign: 'center',\r\n            color: RgbaColor(textColor, 0.5),\r\n            padding: '70px 0'\r\n        }}>No results</div>\r\n    }\r\n\r\n    //display render\r\n    const displayRender = (labels: string[], selectedOptions?: DefaultOptionType[] | undefined) =>\r\n        labels.map((label, i) => {\r\n            if (selectedOptions !== undefined) {\r\n                const option = selectedOptions[i];\r\n                if (option !== null && option !== undefined) {\r\n                    if (i === labels.length - 1) {\r\n                        return (\r\n                            <span key={option.value}>{option.rawLabel}</span>\r\n                        );\r\n                    }\r\n                    return <span key={option.value}>{option.rawLabel} / </span>;\r\n                }\r\n            }\r\n            return <span/>\r\n        })\r\n\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Cascader: {\r\n                        colorBgContainer: 'var(--background-color)',\r\n                        controlItemBgHover: 'var(--secondary-background-color)',\r\n                        controlItemBgActive: RgbaColor(primaryColor),\r\n                        colorPrimary: primaryColor,\r\n                        colorPrimaryHover: primaryColor,\r\n                        colorTextDisabled: RgbaColor(textColor, 0.5),\r\n                        colorBorder: RgbaColor(textColor, 0.3),\r\n                    },\r\n                    Select: {\r\n                        colorBgContainer: 'var(--secondary-background-color)',\r\n                        colorBgElevated: 'var(--background-color)',\r\n                        colorBorder: 'var(--background-color) !important',\r\n                        colorFillSecondary: primaryColor,\r\n                        colorText: 'var(--text-color)',\r\n                        colorTextPlaceholder: RgbaColor(textColor, 0.5),\r\n                        colorIcon: '#fff',\r\n                        colorIconHover: '#fff',\r\n                        controlHeight: 40,\r\n                        controlOutlineWidth: 0,\r\n                        lineHeight: 1.6,\r\n                        fontFamily: 'var(--font)',\r\n                        borderRadius: 8,\r\n                        colorBgContainerDisabled:'var(--secondary-background-color)',\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <LabelWrap\r\n                label={label}\r\n                desc={description}\r\n                grow={true}\r\n                children={\r\n                    <Cascader\r\n                        options={items}\r\n                        onChange={onChange}\r\n                        placeholder={placeholder}\r\n                        multiple={multiple}\r\n                        disabled={disabled}\r\n                        allowClear={allowClear}\r\n                        showSearch={search && {filter}}\r\n                        dropdownMatchSelectWidth={true}\r\n                        style={{width: '100%'}}\r\n                        suffixIcon={<CaretDownFilled/>}\r\n                        expandIcon={<CaretRightFilled/>}\r\n                        maxTagCount={'responsive'}\r\n                        maxTagTextLength={13}\r\n                        defaultValue={index}\r\n                        popupClassName={'shadow-none'}\r\n                        onDropdownVisibleChange={dropdownVisible}\r\n                        notFoundContent={notFoundContent()}\r\n                        displayRender={displayRender}\r\n                        expandTrigger={'click'}\r\n                        showCheckedStrategy={strict ? Cascader.SHOW_PARENT : Cascader.SHOW_CHILD}\r\n                    />\r\n                }\r\n            />\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdCascader\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect} from \"react\";\r\nimport {Divider} from '@mantine/core';\r\nimport {RgbaColor, GetColor, markdown} from \"../js/utils.react\"\r\nimport {CustomIcon} from \"./utils\";\r\n\r\ninterface DividerProp {\r\n    label: any\r\n    color: any\r\n    icon: any\r\n    align: any\r\n    size: any\r\n    variant: any\r\n}\r\n\r\nconst AntdDivider = (props: DividerProp) => {\r\n    //get data\r\n    const label = props['label'];\r\n    const icon = props['icon'];\r\n    const color = props['color'];\r\n    // @ts-ignore\r\n    const align = {'start': 'left', 'center': 'center', 'end': 'right'}[props['align']]\r\n    const size = props['size'];\r\n    const variant = props['variant'];\r\n    const textColor = GetColor('--text-color')\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    return (\r\n        <Divider\r\n            color={color == null ? RgbaColor(textColor) : color}\r\n            label={icon ?\r\n                <span className={'d-flex align-items-center'}>\r\n                    <CustomIcon icon={icon} style={{marginRight: 5}}/>{markdown(label)}\r\n                </span> : markdown(label)}\r\n            labelPosition={align}\r\n            size={size}\r\n            variant={variant}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AntdDivider\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {Switch} from '@mantine/core';\r\nimport {parseIcon, GetColor, RgbaColor, getSize, markdown} from \"../js/utils.react\"\r\n\r\ninterface SwitchProp {\r\n    label: any;\r\n    value: any;\r\n    description: any;\r\n    on_label: any;\r\n    off_label: any;\r\n    align: any\r\n    position: 'left' | 'right';\r\n    size: any\r\n    on_color: any\r\n    off_color: any\r\n    radius: any\r\n    disabled: any;\r\n    key: string | undefined;\r\n    stValue: any\r\n}\r\n\r\nconst AntdSwitch = (props: SwitchProp) => {\r\n    //get data\r\n    const label = props['label']\r\n    const value = props['value']\r\n    const description = props['description']\r\n    const onLabel = parseIcon(props['on_label'])\r\n    const offLabel = parseIcon(props['off_label'])\r\n    const align = props['align']\r\n    const position = props['position']\r\n    const size = props['size']\r\n    const onColor = props['on_color']\r\n    const offColor = props['off_color']\r\n    const radius = props['radius']\r\n    const disabled = props['disabled']\r\n    const key = props['key']\r\n    const primaryColor = GetColor(onColor == null ? '--primary-color' : onColor)\r\n    const textColor = GetColor('--text-color')\r\n    const secondaryBgColor = GetColor(offColor == null ? RgbaColor(textColor) : offColor)\r\n\r\n    const [checked, setChecked] = useState(value)\r\n\r\n\r\n    // set component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    //callback\r\n    const onChange = (event: any) => {\r\n        const v = event.currentTarget.checked;\r\n        setChecked(v)\r\n        Streamlit.setComponentValue(v)\r\n    }\r\n\r\n    //listen index\r\n    const prevStValue = useRef(props['stValue'])\r\n    useEffect(() => {\r\n        const st_i = props['stValue']\r\n        if (String(st_i) !== String(prevStValue.current)) {\r\n            setChecked(st_i);\r\n            prevStValue.current = props['stValue']\r\n        }\r\n    }, [props])\r\n\r\n    return (\r\n        <div className={`d-flex justify-content-${align}`}>\r\n            <Switch\r\n                id={key}\r\n                label={markdown(label)}\r\n                color={onColor}\r\n                description={markdown(description)}\r\n                labelPosition={position}\r\n                onLabel={onLabel}\r\n                offLabel={offLabel}\r\n                disabled={disabled}\r\n                size={size}\r\n                checked={checked}\r\n                onChange={onChange}\r\n                radius={radius}\r\n                styles={(theme) => ({\r\n                    label: {\r\n                        color: 'var(--text-color)',\r\n                        marginBottom: 0,\r\n                    },\r\n                    description: {\r\n                        color: RgbaColor(textColor, 0.5)\r\n                    },\r\n                    trackLabel: {\r\n                        fontSize: getSize(size) - 2,\r\n                        color: '#fff',\r\n                    },\r\n                    track: {\r\n                        cursor: 'pointer',\r\n                        'input:checked+&': !disabled ? {\r\n                            backgroundColor: primaryColor,\r\n                            borderColor: primaryColor,\r\n                        } : {},\r\n                        backgroundColor: secondaryBgColor,\r\n                        borderColor: 'transparent',\r\n                    }\r\n                })}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AntdSwitch\r\n","//recurve str property to react node\r\nconst strToNode = (obj) => {\r\n    if (Array.isArray(obj)) {\r\n        return obj.map(obj_ => strToNode(obj_))\r\n    } else {\r\n        return {'key': String(obj['key']), 'title': obj['titleFormatter']}\r\n    }\r\n}\r\nconst numberToStr = (obj) => {\r\n    if (obj===null){\r\n        return []\r\n    }\r\n    return obj.map((x)=>String(x))\r\n}\r\n\r\nexport {strToNode,numberToStr}","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Transfer, ConfigProvider, Button} from 'antd';\r\nimport {ReloadOutlined} from '@ant-design/icons';\r\nimport type {TransferDirection, TransferListProps} from 'antd/es/transfer';\r\nimport {GetColor, RgbaColor, DarkenColor, insertStyle} from \"../js/utils.react\"\r\nimport {strToNode, numberToStr} from \"../js/transfer.react\";\r\nimport '../css/transfer.css'\r\nimport {LabelWrap} from \"./utils\";\r\n\r\ninterface TransferProp {\r\n    label: any\r\n    description: any\r\n    items: any[]\r\n    index: any\r\n    titles: any\r\n    search: boolean\r\n    pagination: boolean\r\n    oneway: boolean\r\n    color: any\r\n    align: any\r\n    reload: boolean | string\r\n    disabled: boolean\r\n    width: number\r\n    height: number\r\n    use_container_width: boolean\r\n    return_index: boolean;\r\n    kv: any;\r\n}\r\n\r\n\r\nconst AntdTransfer = (props: TransferProp) => {\r\n    //get data\r\n    const label = props['label']\r\n    const description = props['description']\r\n    const items = strToNode(props['items'])\r\n    const index = numberToStr(props['index'])\r\n    const titles = props['titles']\r\n    const search = props['search']\r\n    const pagination = props['pagination']\r\n    const oneway = props['oneway']\r\n    const color = props['color']\r\n    const align = props['align']\r\n    const reload = props['reload']\r\n    const disabled = props['disabled']\r\n    const width = props['width']\r\n    const height = props['height']\r\n    const grow = props['use_container_width']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n    const primaryColor = GetColor(color == null ? '--primary-color' : color)\r\n    const secondaryBgColor = GetColor('--secondary-background-color')\r\n    const textColor = GetColor('--text-color')\r\n\r\n    //data source\r\n    const [dataSource, setDataSource] = useState(items)\r\n    //target keys\r\n    const [targetKeys, setTargetKeys] = useState(index);\r\n\r\n    //callback\r\n    const onChange = (nextTargetKeys: string[], direction: TransferDirection, moveKeys: string[]) => {\r\n        setTargetKeys(nextTargetKeys);\r\n        Streamlit.setComponentValue(nextTargetKeys.map((x) => return_index ? Number(x) : kv[Number(x)]));\r\n    };\r\n    const onSearch = (dir: TransferDirection, value: string) => {\r\n        Streamlit.setComponentValue(targetKeys.map((x: any) => return_index ? Number(x) : kv[Number(x)]))\r\n    };\r\n    const reset = () => {\r\n        setDataSource(items)\r\n        setTargetKeys(index)\r\n        Streamlit.setComponentValue(props['index'].map((x: any) => return_index ? x : kv[x]))\r\n    }\r\n\r\n    //footer\r\n    const renderFooter = (\r\n        _: TransferListProps<any>,\r\n        info?: {\r\n            direction: TransferDirection;\r\n        },\r\n    ) => {\r\n        let float = info !== undefined ? info.direction : 'left'\r\n        return (\r\n            <ConfigProvider\r\n                theme={{\r\n                    components: {\r\n                        Button: {\r\n                            colorPrimary: primaryColor,\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                <Button size=\"small\" type={'primary'} style={{float: `${float}`, margin: 5}} onClick={reset}\r\n                        icon={<ReloadOutlined/>}>\r\n                    {typeof (reload) == 'boolean' ? 'Reload' : reload}\r\n                </Button>\r\n            </ConfigProvider>\r\n        );\r\n    };\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    let textStyle = `\r\n    .ant-transfer-list-content-item-remove:hover{\r\n        color: ${primaryColor} !important;\r\n    }\r\n    `\r\n    insertStyle('sac.transfer.style', textStyle)\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Transfer: {\r\n                        colorBgContainer: 'transform',\r\n                        colorBorder: RgbaColor(textColor),\r\n                        colorText: 'var(--text-color)',\r\n                        colorTextDisabled: RgbaColor(textColor, 0.5),\r\n                        controlItemBgHover: RgbaColor(textColor),\r\n                        controlItemBgActive: 'transform',\r\n                        controlItemBgActiveHover: 'transform',\r\n                        fontFamily: 'var(--font)',\r\n                    },\r\n                    Button: {\r\n                        colorPrimary: primaryColor,\r\n                        colorPrimaryHover: primaryColor,\r\n                        colorPrimaryActive: DarkenColor(primaryColor, 0.1),\r\n                        colorTextDisabled: RgbaColor(textColor, 0.5),\r\n                        colorBgContainerDisabled: RgbaColor(textColor, 0.1),\r\n                    },\r\n                    Checkbox: {\r\n                        colorPrimary: primaryColor,\r\n                        colorPrimaryActive: primaryColor,\r\n                        colorPrimaryHover: primaryColor,\r\n                        colorBgContainer: 'transform',\r\n                        colorBorder: RgbaColor(textColor, 0.3),\r\n                    },\r\n                    Input: {\r\n                        colorBgContainer: 'inherit',\r\n                        colorBorder: RgbaColor(textColor),\r\n                        colorPrimaryHover: primaryColor,\r\n                        activeBorderColor: primaryColor,\r\n                        controlOutlineWidth: 0,\r\n                        colorTextPlaceholder: RgbaColor(textColor, 0.5),\r\n                    },\r\n                    Pagination: {\r\n                        colorText: 'var(--text-color)',\r\n                        colorBgContainer: 'inherit',\r\n                        colorBorder: RgbaColor(textColor),\r\n                        colorPrimary: primaryColor,\r\n                        colorPrimaryHover: primaryColor,\r\n                        controlOutlineWidth: 0,\r\n                        colorTextDisabled: RgbaColor(textColor)\r\n                    },\r\n                    Dropdown: {\r\n                        colorBgElevated: GetColor('--background-color'),\r\n                        colorText: 'var(--text-color)',\r\n                        controlItemBgHover: secondaryBgColor,\r\n                        boxShadowSecondary: `0 0 10px ${secondaryBgColor}, 0 0 6px ${secondaryBgColor}`,\r\n                    },\r\n                    Empty: {\r\n                        colorTextDisabled: RgbaColor(textColor, 0.3),\r\n                    }\r\n                },\r\n            }}\r\n        >\r\n            <LabelWrap\r\n                label={label}\r\n                desc={description}\r\n                align={align}\r\n                grow={grow}\r\n                style={{overflowX: 'auto'}}\r\n                children={\r\n                    <Transfer\r\n                        dataSource={dataSource}\r\n                        titles={titles}\r\n                        targetKeys={targetKeys}\r\n                        onChange={onChange}\r\n                        onSearch={onSearch}\r\n                        render={(item: any) => item.title}\r\n                        showSearch={search}\r\n                        showSelectAll={true}\r\n                        pagination={pagination}\r\n                        oneWay={oneway}\r\n                        disabled={disabled}\r\n                        listStyle={{\r\n                            width: grow ? '100%' : width,\r\n                            height: height,\r\n                            minHeight: 200 + (search ? 60 : 0) + (reload ? 40 : 0)\r\n                        }}\r\n                        footer={typeof (reload) == 'string' || String(reload) === 'true' ? renderFooter : undefined}\r\n                    />\r\n                }\r\n            />\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdTransfer\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {SegmentedControl} from '@mantine/core';\r\nimport {strToNode} from \"../js/segmented.react\";\r\nimport {GetColor} from \"../js/utils.react\"\r\nimport \"../css/segmented.css\"\r\nimport {LabelWrap} from \"./utils\";\r\n\r\ninterface SegmentedProp {\r\n    items: any[];\r\n    index: number;\r\n    label: string;\r\n    description: string;\r\n    radius: any;\r\n    size: any;\r\n    color: string;\r\n    bg_color: string;\r\n    align: any;\r\n    direction: any;\r\n    disabled: boolean;\r\n    divider: boolean;\r\n    use_container_width: boolean;\r\n    readonly: boolean;\r\n    return_index: boolean;\r\n    kv: any;\r\n    stValue: any\r\n}\r\n\r\n\r\nconst AntdSegmented = (props: SegmentedProp) => {\r\n    //get data\r\n    const items = strToNode(props['items'])\r\n    const index = String(props['index'])\r\n    const label = props['label']\r\n    const description = props['description']\r\n    const radius = props['radius']\r\n    const size = props['size']\r\n    const color = props['color']\r\n    const bg_color = props['bg_color']\r\n    const align = props['align']\r\n    const direction = props['direction']\r\n    const disabled = props['disabled']\r\n    const divider = props['divider']\r\n    const grow = props['use_container_width']\r\n    const readonly = props['readonly']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n    const primaryColor = GetColor(color == null ? '--primary-color' : color)\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    const [value, setValue] = useState(index)\r\n\r\n    //callback\r\n    const onChange = (value: string) => {\r\n        setValue(value)\r\n        Streamlit.setComponentValue(return_index ? Number(value) : kv[Number(value)])\r\n    }\r\n\r\n    //listen index and stIndex\r\n    const prevIndex = useRef(props['index'])\r\n    const prevStValue = useRef(props['stValue'])\r\n    useEffect(() => {\r\n        const i = props['index']\r\n        const st_i = props['stValue']\r\n        if (i !== prevIndex.current && i !== null) {\r\n            setValue(String(i));\r\n            Streamlit.setComponentValue(return_index ? Number(i) : kv[Number(i)]);\r\n            prevIndex.current = props['index']\r\n        }\r\n        if (st_i !== prevStValue.current) {\r\n            setValue(String(st_i));\r\n            Streamlit.setComponentValue(return_index ? Number(st_i) : kv[Number(st_i)]);\r\n            prevStValue.current = props['stValue']\r\n        }\r\n    }, [props, kv, return_index])\r\n\r\n    return <LabelWrap\r\n        label={label}\r\n        desc={description}\r\n        size={size}\r\n        align={align}\r\n        grow={grow}\r\n        children={\r\n            <SegmentedControl\r\n                color={color}\r\n                data={items}\r\n                defaultValue={index}\r\n                onChange={onChange}\r\n                value={value}\r\n                fullWidth={grow}\r\n                disabled={disabled}\r\n                size={typeof (size) == 'number' ? 'md' : size}\r\n                radius={radius}\r\n                orientation={direction}\r\n                readOnly={readonly}\r\n                className={'d-flex flex-wrap'}\r\n                styles={(theme) => ({\r\n                    root: {\r\n                        backgroundColor: bg_color == null ? 'var(--secondary-background-color)' :\r\n                            Object.keys(theme.colors).indexOf(bg_color) !== -1 ? theme.colors[bg_color][1] : bg_color,\r\n                    },\r\n                    label: {\r\n                        fontSize: typeof (size) == 'number' ? size : undefined,\r\n                        display: \"flex\", alignItems: 'center', justifyContent: 'center',\r\n                        color: 'var(--text-color)',\r\n                        marginBottom: 0,\r\n                        '&:hover': {\r\n                            color: 'var(--text-color)'\r\n                        },\r\n                        '&[data-active]': {\r\n                            color: '#fff'\r\n                        },\r\n                        '&[data-active]:hover': {\r\n                            color: '#fff'\r\n                        },\r\n                    },\r\n                    indicator: {\r\n                        backgroundColor: primaryColor,\r\n                    },\r\n                    control: {\r\n                        '&:not(:first-of-type)': {\r\n                            borderStyle: divider ? \"solid\" : 'none'\r\n                        }\r\n                    }\r\n                })}\r\n            />\r\n        }\r\n    />\r\n};\r\n\r\nexport default AntdSegmented\r\n","import {deepCopy} from \"./utils.react\";\r\nimport React from \"react\";\r\nimport {CustomIcon} from \"../ts/utils\";\r\n\r\nconst strToNode = (obj) => {\r\n    return obj.map((item, idx) => {\r\n        let item_ = deepCopy(item)\r\n        if (item_['icon'] != null) {\r\n            if (item_['label'].length > 0) {\r\n                item_['label'] = <>\r\n                    <CustomIcon icon={item.icon} style={{marginRight:10}}/>\r\n                    {item_['label']}\r\n                </>\r\n            } else {\r\n                item_['label'] = <CustomIcon icon={item.icon}/>\r\n            }\r\n        }\r\n        if (item_['href'] != null) {\r\n            item_['label'] = <a href={item_['href']} target={'_blank'} rel={'noreferrer'}>{item_['label']}</a>\r\n        }\r\n        item_['value'] = String(item_['value'])\r\n        return item_\r\n    })\r\n}\r\n\r\nexport {strToNode}","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect} from \"react\";\r\nimport {Alert, ConfigProvider} from 'antd';\r\nimport {GetColor, getSize, insertStyle, MartineRadiusSize, RgbaColor, markdown} from \"../js/utils.react\";\r\nimport Marquee from \"react-fast-marquee\";\r\nimport {CustomIcon} from \"./utils\";\r\n\r\ninterface AlertProp {\r\n    label: string;\r\n    description: string;\r\n    size: any\r\n    color: any\r\n    radius: any\r\n    variant: any\r\n    icon: any\r\n    closable: boolean;\r\n    banner: boolean | boolean[] | any;\r\n}\r\n\r\nconst AntdAlert = (props: AlertProp) => {\r\n    //get data\r\n    const message = props['label']\r\n    const description = props['description']\r\n    const size = props['size']\r\n    const color = props['color']\r\n    const radius = props['radius']\r\n    const variant = props['variant']\r\n    const icon = props['icon']\r\n    const closable = props['closable']\r\n    const banner = props['banner']\r\n    const colorList: any = {\r\n        'info': {'primary': 'rgb(0, 66, 128)', 'lighten': 'rgba(28, 131, 225, 0.1)'},\r\n        'success': {'primary': 'rgb(23, 114, 51)', 'lighten': 'rgba(33, 195, 84, 0.1)'},\r\n        'warning': {'primary': 'rgb(146, 108, 5)', 'lighten': 'rgba(255, 227, 18, 0.1)'},\r\n        'error': {'primary': 'rgb(125, 53, 59)', 'lighten': 'rgba(255, 43, 43, 0.09)'},\r\n    }\r\n\r\n    // component height\r\n    useEffect(() => {\r\n        setTimeout(() => Streamlit.setFrameHeight(), 0.001)\r\n    })\r\n\r\n    const getStyle = (color: any, size: any) => {\r\n        let element, primary, lighten;\r\n        if (Object.keys(colorList).indexOf(color) !== -1) {\r\n            element = color\r\n            primary = colorList[color].primary\r\n            lighten = colorList[color].lighten\r\n        } else {\r\n            element = 'info'\r\n            primary = GetColor(color)\r\n            lighten = RgbaColor(primary)\r\n        }\r\n        return `\r\n        .ant-alert.ant-alert-${element}{\r\n            color: ${variant === 'filled' ? '#fff' : primary};\r\n            background: ${variant === 'filled' ? primary : variant === 'light' || variant === 'quote-light' ? lighten : 'transparent'};\r\n        }\r\n        .ant-alert.ant-alert-${element} .ant-alert-message{\r\n            color: ${variant === 'filled' ? '#fff' : primary};\r\n        }\r\n        .ant-alert.ant-alert-${element} .anticon.anticon-close{\r\n            color: ${variant === 'filled' ? '#fff' : primary};\r\n            font-size: ${getSize(size) * 0.8}px;\r\n        }\r\n        .ant-alert-${element} .ant-alert-icon{\r\n            color: ${variant === 'filled' ? '#fff' : primary};\r\n            font-size: ${getSize(size) + 8}px;\r\n        }\r\n        .ant-alert{\r\n            border: ${variant === 'outline' ? `1px solid ${primary}` : 0} !important;\r\n            border-left:${variant === 'quote' || variant === 'quote-light' ? `4px solid ${primary}` : '1'} !important;\r\n            border-top-left-radius:${variant === 'quote' || variant === 'quote-light' ? 0 : 'none'} !important;\r\n            border-bottom-left-radius:${variant === 'quote' || variant === 'quote-light' ? 0 : 'none'} !important;\r\n        }\r\n        .ant-alert-description{\r\n            color: ${variant === 'filled' ? '#fff' : GetColor('--text-color')} !important;\r\n        }\r\n        .ant-alert-message{\r\n            font-size:${getSize(size)}px !important;\r\n        }\r\n        `\r\n    }\r\n    insertStyle(`sac.alert.style`, getStyle(color, size))\r\n\r\n    const getPlay = (b: any) => {\r\n        return typeof (b) === 'boolean' ? b : b['play']\r\n    }\r\n\r\n    const getBanner = (ban: any) => {\r\n        if (Array.isArray(ban)) {\r\n            //total banner,message banner,description banner\r\n            const db = ban.length === 1 ? ban[0] : ban[1]\r\n            return [Boolean(getPlay(ban[0]) || getPlay(ban[1])), ban[0], db]\r\n        } else {\r\n            return [getPlay(ban), ban, ban]\r\n        }\r\n    }\r\n    const [totalBanner, messageBanner, descriptionBanner] = getBanner(banner)\r\n\r\n    const customMarquee = (ban: any, children: any) => {\r\n        if (getPlay(ban)) {\r\n            if (typeof (ban) === 'boolean') {\r\n                return <Marquee pauseOnHover={true}>{markdown(children)}</Marquee>\r\n            } else {\r\n                return <Marquee pauseOnHover={ban['pauseOnHover']} speed={ban['speed']} play={ban['play']}\r\n                                direction={ban['direction']}>{markdown(children)}</Marquee>\r\n            }\r\n        } else {\r\n            return markdown(children)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Alert: {\r\n                        fontSize: getSize(size),\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <Alert\r\n                message={customMarquee(messageBanner, message)}\r\n                description={description == null ? undefined : customMarquee(descriptionBanner, description)}\r\n                type={Object.keys(colorList).indexOf(color) !== -1 ? color : 'info'}\r\n                showIcon={typeof (icon) === 'boolean' ? icon : true}\r\n                closable={closable}\r\n                banner={totalBanner}\r\n                style={{borderRadius: getSize(radius, MartineRadiusSize)}}\r\n                onClose={() => Streamlit.setFrameHeight(0)}\r\n                icon={typeof (icon) === 'boolean' ? undefined : <CustomIcon icon={icon} class={'ant-alert-icon'}/>}\r\n            />\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdAlert\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect} from \"react\";\r\nimport {Rate, ConfigProvider} from 'antd';\r\nimport {parseIcon, GetColor, RgbaColor} from \"../js/utils.react\"\r\nimport {StarFilled} from '@ant-design/icons';\r\nimport {LabelWrap} from \"./utils\";\r\n\r\ninterface RateProp {\r\n    label: any\r\n    description: any\r\n    value: any\r\n    count: any\r\n    symbol: any\r\n    align: string\r\n    half: boolean\r\n    size: any\r\n    color: any\r\n    stValue: any\r\n}\r\n\r\nconst AntdRate = (props: RateProp) => {\r\n    //get data\r\n    const label = props['label'];\r\n    const description = props['description'];\r\n    const value = props['value'];\r\n    const count = props['count'];\r\n    const symbol = parseIcon(props['symbol']);\r\n    const align = props['align'];\r\n    const half = props['half'];\r\n    const size = props['size'];\r\n    const color = props['color'];\r\n    const primaryColor = GetColor(color == null ? '--primary-color' : color)\r\n    const textColor = GetColor('--text-color')\r\n    const sizeMap: any = {'xs': 12, 'sm': 16, 'md': 20, 'lg': 30, 'xl': 50}\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    //callback\r\n    const onChange = (value: number) => {\r\n        Streamlit.setComponentValue(value)\r\n    }\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Rate: {\r\n                        colorFillContent: RgbaColor(textColor, 0.2),\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <LabelWrap\r\n                label={label}\r\n                desc={description}\r\n                align={align}\r\n                size={size}\r\n                children={\r\n                    <Rate\r\n                        defaultValue={value}\r\n                        count={count}\r\n                        character={symbol !== null ? symbol : <StarFilled/>}\r\n                        allowHalf={half}\r\n                        style={{fontSize: typeof (size) == 'string' ? sizeMap[size] : size, color: primaryColor}}\r\n                        onChange={onChange}\r\n                    />\r\n                }\r\n            />\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdRate\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {Steps, ConfigProvider} from 'antd';\r\nimport {GetColor, insertStyle, RgbaColor, getSize} from \"../js/utils.react\";\r\nimport {strToNode} from \"../js/steps.react\";\r\nimport \"../css/steps.css\"\r\n\r\ninterface StepsProp {\r\n    items: any[];\r\n    index: number;\r\n    size: any\r\n    color: any\r\n    placement: any;\r\n    direction: any;\r\n    variant: any;\r\n    dot: boolean;\r\n    return_index: boolean;\r\n    kv: any;\r\n    stValue: any\r\n}\r\n\r\nconst AntdSteps = (props: StepsProp) => {\r\n    //get data\r\n    const items = strToNode(props['items'])\r\n    const index = props['index']\r\n    const size = props['size']\r\n    const color = props['color']\r\n    const placement = props['placement']\r\n    const direction = props['direction']\r\n    const variant = props['variant']\r\n    const dot = props['dot']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n    const primaryColor = GetColor(color == null ? '--primary-color' : color)\r\n    const primaryLightColor = RgbaColor(primaryColor)\r\n    const textColor = GetColor('--text-color')\r\n\r\n    const [current, setCurrent] = useState(index)\r\n\r\n    // component height\r\n    useEffect(() => {\r\n        setTimeout(() => Streamlit.setFrameHeight(), 0.01)\r\n    })\r\n\r\n    const textStyle = `\r\n    .ant-steps-item-title{\r\n        font-size:${getSize(size)}px !important\r\n    }\r\n    .ant-steps-item-custom .ant-steps-item-icon .ant-steps-icon{\r\n        color:${RgbaColor(textColor,0.5)} !important\r\n    }\r\n    `\r\n    insertStyle(`sac.steps.style`, textStyle)\r\n\r\n    //callback\r\n    const onChange = (current: any) => {\r\n        setCurrent(current)\r\n        Streamlit.setComponentValue(return_index ? current : kv[current])\r\n    }\r\n\r\n    //listen index and stIndex\r\n    const prevIndex = useRef(props['index'])\r\n    const prevStValue = useRef(props['stValue'])\r\n    useEffect(() => {\r\n        const i = props['index']\r\n        const st_i = props['stValue']\r\n        if (i !== prevIndex.current && i !== null) {\r\n            setCurrent(i);\r\n            Streamlit.setComponentValue(return_index ? i : kv[i]);\r\n            prevIndex.current = props['index']\r\n        }\r\n        if (st_i !== prevStValue.current) {\r\n            setCurrent(st_i);\r\n            Streamlit.setComponentValue(return_index ? st_i : kv[st_i]);\r\n            prevStValue.current = props['stValue']\r\n        }\r\n    }, [props, kv, return_index])\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Steps: {\r\n                        colorTextLabel: RgbaColor(textColor, 0.5),\r\n                        colorFillContent: RgbaColor(textColor, 0.1),\r\n                        colorSplit: RgbaColor(textColor, 0.5),\r\n                        navArrowColor: RgbaColor(textColor, 0.5),\r\n                        colorTextDescription: RgbaColor(textColor, 0.5),\r\n                        colorPrimary: primaryColor,\r\n                        colorText: 'var(--text-color)',\r\n                        controlItemBgActive: primaryLightColor,\r\n                        customIconFontSize: getSize(size) + 14,\r\n                        iconFontSize: getSize(size) - 2,\r\n                        iconSize: getSize(size) + 16,\r\n                        fontSize: getSize(size) - 2,\r\n                        dotSize: getSize(size) - 8,\r\n                        dotCurrentSize: getSize(size) - 6,\r\n                        iconTop:0,\r\n                        colorIconHover:'red'\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <Steps\r\n                items={items}\r\n                current={current}\r\n                direction={direction}\r\n                labelPlacement={placement}\r\n                type={variant}\r\n                progressDot={dot}\r\n                onChange={onChange}\r\n            />\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdSteps\r\n","import {deepCopy} from \"./utils.react\";\r\nimport {CustomIcon} from \"../ts/utils\";\r\nimport React from \"react\";\r\n\r\nconst strToNode = (obj) => {\r\n    return obj.map((item, idx) => {\r\n        let item_ = deepCopy(item)\r\n        if (item_['icon'] != null) {\r\n            item_['icon'] = <CustomIcon icon={item_['icon']}/>\r\n        }\r\n        item_['subTitle'] = item_['subtitle']\r\n        delete item_['subtitle']\r\n        return item_\r\n    })\r\n}\r\n\r\nexport {strToNode}","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {Checkbox, ConfigProvider} from 'antd';\r\nimport type {CheckboxValueType} from \"antd/es/checkbox/Group\";\r\nimport type {CheckboxChangeEvent} from 'antd/es/checkbox';\r\nimport {GetColor, getSize, insertStyle, MartineRadiusSize, RgbaColor} from \"../js/utils.react\"\r\nimport {LabelWrap} from \"./utils\";\r\n\r\ninterface CheckboxProp {\r\n    label: any\r\n    description: any\r\n    items: any[]\r\n    index: any\r\n    check_all: boolean | string\r\n    radius: any\r\n    size: any\r\n    color: any\r\n    align: string\r\n    disabled: boolean\r\n    return_index: boolean;\r\n    kv: any;\r\n    stValue: any\r\n}\r\n\r\nconst AntdCheckbox = (props: CheckboxProp) => {\r\n    //get data\r\n    const items = props['items']\r\n    let index = props['index']\r\n    const check_all = props['check_all']\r\n    const label = props['label']\r\n    const description = props['description']\r\n    const radius = props['radius']\r\n    const size = props['size']\r\n    const color = props['color']\r\n    const align = props['align']\r\n    const disabled = props['disabled']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n    const allIndex = disabled ? [] : items.filter(item => !item.disabled).map(item => item.value)\r\n    const primaryColor = GetColor(color == null ? '--primary-color' : color)\r\n    const textColor = GetColor('--text-color')\r\n    const bgColor = GetColor('--background-color')\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    const textStyle = `\r\n    .ant-checkbox-inner{\r\n        border-radius:${getSize(radius, MartineRadiusSize)}px !important\r\n    }\r\n    .ant-checkbox-indeterminate .ant-checkbox-inner:after{\r\n        width:50% !important;\r\n        height:50% !important\r\n    }\r\n    .ant-checkbox-checked .ant-checkbox-inner:after{\r\n        top:45% !important\r\n    }\r\n    `\r\n    insertStyle(`sac.checkbox.style`, textStyle)\r\n\r\n    //state\r\n    const [checkedList, setCheckedList] = useState<CheckboxValueType[]>(index)\r\n\r\n    const initState = (x: number[], y: number[]) => {\r\n        if (x.length === y.length) {\r\n            return {'checkAll': true, 'indeterminate': false}\r\n        } else {\r\n            if (x.length > 0) {\r\n                return {'checkAll': false, 'indeterminate': true}\r\n            } else {\r\n                return {'checkAll': false, 'indeterminate': false}\r\n            }\r\n        }\r\n    }\r\n    const [indeterminate, setIndeterminate] = useState(initState(index, allIndex)['indeterminate']);\r\n    const [checkAll, setCheckAll] = useState(initState(index, allIndex)['checkAll']);\r\n\r\n    //callback\r\n    const onChange = (list: CheckboxValueType[]) => {\r\n        setCheckedList(list)\r\n        setIndeterminate(!!list.length && list.length < allIndex.length);\r\n        setCheckAll(list.length === allIndex.length)\r\n        Streamlit.setComponentValue(list.map((x: any) => return_index ? x : kv[x]))\r\n    }\r\n    const onCheckAllChange = (e: CheckboxChangeEvent) => {\r\n        let stValue = e.target.checked ? allIndex : [];\r\n        setCheckedList(stValue);\r\n        setIndeterminate(false);\r\n        setCheckAll(e.target.checked);\r\n        Streamlit.setComponentValue(stValue.map((x: any) => return_index ? x : kv[x]))\r\n    };\r\n\r\n    //listen index\r\n    const prevIndex = useRef(props['index'])\r\n    const prevStValue = useRef(props['stValue'])\r\n\r\n    useEffect(() => {\r\n        const i = props['index']\r\n        const st_i = props['stValue']\r\n        if (String(i) !== String(prevIndex.current)) {\r\n            setCheckedList(i);\r\n            prevIndex.current = props['index']\r\n            Streamlit.setComponentValue(i.map((x: any) => return_index ? x : kv[x]))\r\n        }\r\n        if (String(st_i) !== String(prevStValue.current)) {\r\n            const st_ii = Array.isArray(st_i) ? st_i : [st_i]\r\n            setCheckedList(st_ii);\r\n            prevStValue.current = props['stValue']\r\n            Streamlit.setComponentValue(st_ii.map((x: any) => return_index ? x : kv[x]))\r\n        }\r\n    }, [props, kv, return_index])\r\n\r\n    const checkAllElement = (x: boolean | string) => {\r\n        if (String(x) === 'false') {\r\n            return undefined\r\n        } else {\r\n            return <Checkbox\r\n                indeterminate={indeterminate}\r\n                checked={checkAll}\r\n                onChange={onCheckAllChange}\r\n                style={{paddingRight: 8, whiteSpace: \"nowrap\"}}\r\n            >\r\n                {String(x) === 'true' ? 'Check all' : x}\r\n            </Checkbox>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Checkbox: {\r\n                        colorText: '--text-color',\r\n                        colorPrimary: primaryColor,\r\n                        colorPrimaryHover: 'transform',\r\n                        colorBgContainer: bgColor,\r\n                        colorTextDisabled: RgbaColor(textColor, 0.5),\r\n                        colorBgContainerDisabled: RgbaColor(textColor),\r\n                        colorBorder: RgbaColor(textColor, 0.3),\r\n                        fontSize: getSize(size),\r\n                        controlInteractiveSize: 2 * getSize(size) - 10,\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <LabelWrap\r\n                label={label}\r\n                desc={description}\r\n                align={align}\r\n                size={size}\r\n                children={\r\n                    <div className={`d-flex flex-row align-items-start`}>\r\n                        {checkAllElement(check_all)}\r\n                        <Checkbox.Group\r\n                            options={items}\r\n                            disabled={disabled}\r\n                            defaultValue={index}\r\n                            value={checkedList}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                }\r\n            />\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdCheckbox\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect} from \"react\";\r\nimport {Result, Empty, Space, ConfigProvider} from 'antd';\r\nimport {RgbaColor, markdown, GetColor} from \"../js/utils.react\";\r\nimport {CustomIcon} from \"./utils\";\r\n\r\ninterface ResultProp {\r\n    label: any;\r\n    description: string | null;\r\n    status: any;\r\n    icon: any;\r\n    key: string | undefined;\r\n}\r\n\r\nconst AntdResult = (props: ResultProp) => {\r\n    //get data\r\n    let title = props['label']\r\n    const subtitle = props['description']\r\n    const status = props['status']\r\n    const icon = props['icon']\r\n    const key = props['key']\r\n    const colorMap = {\r\n        'info': 'rgba(28, 131, 225, 0.9)',\r\n        'success': 'rgba(33, 195, 84, 0.8)',\r\n        'warning': 'rgba(255, 207, 18,0.9)',\r\n        'error': 'rgba(255, 43, 43, 0.8)',\r\n    }\r\n    // @ts-ignore\r\n    const color = colorMap[status]\r\n    const textColor = GetColor('--text-color')\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    const resultWrap = (s: ResultProp['status']) => {\r\n        if (s === 'empty') {\r\n            return <Empty\r\n                description={<Space direction={'vertical'} className={'d-flex'}>\r\n                    <div style={{fontSize: 24}}>{title}</div>\r\n                    <div style={{fontSize: 14}}>{subtitle}</div>\r\n                </Space>}\r\n            />\r\n        } else {\r\n            return <Result\r\n                key={key}\r\n                title={markdown(title)}\r\n                subTitle={markdown(subtitle)}\r\n                status={status}\r\n                icon={icon !== null ? <CustomIcon icon={icon} style={{fontSize: 72, color: color}}/> : undefined}\r\n                className={'pb-0'}\r\n                style={{wordWrap: 'break-word'}}\r\n            />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Result: {\r\n                        colorTextHeading: 'var(--text-color)',\r\n                        colorTextDescription: RgbaColor(textColor, 0.5),\r\n                        iconFontSize: 72,\r\n                        extraMargin: 0,\r\n                        colorInfo: colorMap.info,\r\n                        colorSuccess: colorMap.success,\r\n                        colorWarning: colorMap.warning,\r\n                        colorError: colorMap.error,\r\n                    },\r\n                    Empty: {\r\n                        colorText: RgbaColor(textColor, 0.5),\r\n                    }\r\n                },\r\n            }}\r\n        >\r\n            {resultWrap(status)}\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdResult\r\n","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {Pagination, ConfigProvider} from 'antd';\r\nimport type {PaginationProps} from 'antd';\r\nimport {GetColor, insertStyle, RgbaColor, MartineRadiusSize, getSize} from \"../js/utils.react\"\r\nimport '../css/pagination.css'\r\n\r\ninterface PaginationProp {\r\n    total: any\r\n    index: any\r\n    page_size: any\r\n    jump: any\r\n    align: string\r\n    circle: string\r\n    color: any\r\n    size: any\r\n    radius: any\r\n    variant: any\r\n    previous: any\r\n    next: any\r\n    simple: boolean\r\n    disabled: boolean\r\n    show_total: boolean\r\n    stValue: any\r\n}\r\n\r\nconst AntdPagination = (props: PaginationProp) => {\r\n    //get data\r\n    const total = props['total'];\r\n    const index = props['index'];\r\n    const page_size = props['page_size'];\r\n    const jump = props['jump'];\r\n    const align = props['align'];\r\n    const color = props['color'];\r\n    const size = props['size'];\r\n    const radius = props['radius'];\r\n    const variant = props['variant'];\r\n    const previous = props['previous'];\r\n    const next = props['next'];\r\n    const simple = props['simple'];\r\n    const disabled = props['disabled'];\r\n    const show_total = props['show_total'];\r\n    const primaryColor = GetColor(color == null ? '--primary-color' : color)\r\n    const primaryLightColor = RgbaColor(primaryColor)\r\n    const textColor = GetColor('--text-color')\r\n\r\n    const [current, setCurrent] = useState(index);\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n\r\n    const textStyle = `\r\n    .ant-pagination-item-active{\r\n        border-color: ${variant === 'light' ? primaryLightColor : primaryColor} !important\r\n    }\r\n    .ant-pagination-item-active a{\r\n        color: ${variant === 'filled' ? '#fff' : primaryColor} !important\r\n    }\r\n    .ant-pagination-options-quick-jumper input{\r\n        border-radius: ${getSize(radius, MartineRadiusSize)}px;\r\n        aspect-ratio: 2/1;\r\n        width:auto !important\r\n    }\r\n    .ant-pagination-item-ellipsis{\r\n        color:${RgbaColor(textColor)} !important\r\n    }\r\n    .ant-pagination-item-link[disabled]{\r\n        color:${RgbaColor(textColor)} !important\r\n    }\r\n    .ant-pagination-item-link,.ant-pagination-item-link-icon{\r\n        font-size:${getSize(size)}px !important\r\n    }\r\n    `\r\n    insertStyle(`sac.pagination.style`, textStyle)\r\n\r\n    //callback\r\n    const onChange: PaginationProps['onChange'] = (page) => {\r\n        setCurrent(page);\r\n        Streamlit.setComponentValue(page)\r\n    }\r\n\r\n    //listen index\r\n    const prevIndex = useRef(props['index'])\r\n    const prevStValue = useRef(props['stValue'])\r\n    useEffect(() => {\r\n        const i = props['index']\r\n        const st_i = props['stValue']\r\n        if (i !== prevIndex.current) {\r\n            setCurrent(i);\r\n            Streamlit.setComponentValue(i);\r\n            prevIndex.current = props['index']\r\n        }\r\n        if (st_i !== prevStValue.current) {\r\n            setCurrent(st_i);\r\n            Streamlit.setComponentValue(st_i);\r\n            prevStValue.current = props['stValue']\r\n        }\r\n    }, [props])\r\n\r\n    //previous and next button\r\n    const itemRender: PaginationProps['itemRender'] = (_, type, originalElement) => {\r\n        if (type === 'prev' && previous !== null) {\r\n            return <button className={'ant-pagination-item-link px-2'} style={{fontSize: getSize(size)}}>\r\n                {previous}\r\n            </button>\r\n        }\r\n        if (type === 'next' && next !== null) {\r\n            return <button className={'ant-pagination-item-link px-2'} style={{fontSize: getSize(size)}}>\r\n                {next}\r\n            </button>\r\n        }\r\n        return originalElement;\r\n    };\r\n\r\n    return (\r\n        <ConfigProvider\r\n            theme={{\r\n                components: {\r\n                    Pagination: {\r\n                        itemActiveBg: variant === 'outline' ? 'transform' : variant === 'light' ? primaryLightColor : primaryColor,\r\n                        colorBgContainer: 'inherit',\r\n                        colorPrimary: primaryColor,\r\n                        colorPrimaryHover: primaryColor,\r\n                        colorText: 'var(--text-color)',\r\n                        colorBgTextHover: RgbaColor(textColor),\r\n                        colorBgTextActive: RgbaColor(textColor, 0.25),\r\n                        borderRadius: getSize(radius, MartineRadiusSize),\r\n                        controlOutlineWidth: 0,\r\n                        colorBorder: RgbaColor(textColor, 0.3),\r\n                        fontSize: getSize(size),\r\n                        itemSize: 3 * getSize(size) - 16,\r\n                        controlHeight: 3 * getSize(size) - 18,\r\n                        colorTextDisabled: RgbaColor(textColor),\r\n                        controlItemBgActiveDisabled: RgbaColor(textColor, 0.1),\r\n                        colorBgContainerDisabled: RgbaColor(textColor, 0.1),\r\n                    },\r\n                },\r\n            }}\r\n        >\r\n            <div className={`d-flex justify-content-${align}`}>\r\n                <Pagination\r\n                    current={current}\r\n                    showQuickJumper={jump}\r\n                    defaultCurrent={index}\r\n                    defaultPageSize={page_size}\r\n                    simple={simple}\r\n                    disabled={disabled}\r\n                    onChange={onChange}\r\n                    total={total}\r\n                    showTitle={false}\r\n                    showSizeChanger={false}\r\n                    itemRender={itemRender}\r\n                    showTotal={show_total ? (t, r) => `${r[0]}-${r[1]} / ${t}` : undefined}\r\n                />\r\n            </div>\r\n        </ConfigProvider>\r\n    );\r\n};\r\n\r\nexport default AntdPagination\r\n","import {deepCopy,} from \"./utils.react\";\r\nimport React from \"react\";\r\nimport {CustomIcon} from \"../ts/utils\";\r\n\r\nconst strToNode = (obj) => {\r\n    if (Array.isArray(obj)) {\r\n        return obj.map(obj_ => strToNode(obj_))\r\n    } else {\r\n        let obj_copy = deepCopy(obj);\r\n        let label = obj_copy['label']\r\n        let icon = obj_copy['icon']\r\n        if (icon !== null) {\r\n            if (label.length > 0) {\r\n                obj_copy['label'] = <span>\r\n                    <CustomIcon icon={icon} style={{marginRight:5}}/>\r\n                    {label}\r\n                </span>\r\n            } else {\r\n                obj_copy['label'] = <CustomIcon icon={icon}/>\r\n            }\r\n        }\r\n        obj_copy['value'] = String(obj_copy['value'])\r\n        return obj_copy\r\n    }\r\n}\r\nexport default strToNode","import AntdButtons from \"./ts/Buttons\";\r\nimport AntdTabs from \"./ts/Tabs\";\r\nimport AntdMenu from \"./ts/Menu\";\r\nimport AntdTree from \"./ts/Tree\";\r\nimport AntdCascader from \"./ts/Cascader\";\r\nimport AntdDivider from \"./ts/Divider\";\r\nimport AntdSwitch from \"./ts/Switch\";\r\nimport AntdTransfer from \"./ts/Transfer\";\r\nimport AntdSegmented from \"./ts/Segmented\";\r\nimport AntdAlert from \"./ts/Alert\";\r\nimport AntdRate from \"./ts/Rate\";\r\nimport AntdSteps from \"./ts/Steps\";\r\nimport AntdCheckbox from \"./ts/Checkbox\";\r\nimport AntdResult from \"./ts/Result\";\r\nimport {AntdTags} from \"./ts/Tag\";\r\nimport AntdPagination from \"./ts/Pagination\";\r\nimport AntdChip from \"./ts/Chip\";\r\n\r\n//named components\r\nconst componentsMap: any = {\r\n    'buttons': AntdButtons,\r\n    'tabs': AntdTabs,\r\n    'menu': AntdMenu,\r\n    'tree': AntdTree,\r\n    'cascader': AntdCascader,\r\n    'divider': AntdDivider,\r\n    'switch': AntdSwitch,\r\n    'transfer': AntdTransfer,\r\n    'segmented': AntdSegmented,\r\n    'alert': AntdAlert,\r\n    'rate': AntdRate,\r\n    'steps': AntdSteps,\r\n    'checkbox': AntdCheckbox,\r\n    'result': AntdResult,\r\n    'tags': AntdTags,\r\n    'pagination': AntdPagination,\r\n    'chip': AntdChip\r\n}\r\n\r\nexport default componentsMap","import {Streamlit} from \"streamlit-component-lib\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {Chip, Group, Stack} from \"@mantine/core\";\r\nimport {reindex, GetColor, RgbaColor, DarkenColor, getSize} from \"../js/utils.react\"\r\nimport strToNode from \"../js/chip.react\";\r\nimport {LabelWrap} from \"./utils\";\r\n\r\ninterface ChipProp {\r\n    label: any\r\n    description: any\r\n    items: any[]\r\n    index: any\r\n    align: string\r\n    direction: string\r\n    radius: any\r\n    size: any\r\n    color: any\r\n    variant: string\r\n    multiple: boolean\r\n    return_index: boolean;\r\n    kv: any;\r\n    stValue: any\r\n}\r\n\r\nconst AntdChip = (props: ChipProp) => {\r\n    //get data\r\n    const items = strToNode(props['items'])\r\n    const index = reindex(props['index'], true, props['multiple'])\r\n    const label = props['label']\r\n    const description = props['description']\r\n    const align = props['align']\r\n    const direction = props['direction']\r\n    const radius = props['radius']\r\n    const size = props['size']\r\n    const color = props['color']\r\n    const variant = props['variant']\r\n    const multiple = props['multiple']\r\n    const return_index = props['return_index']\r\n    const kv = props['kv']\r\n    const primaryColor = GetColor(color == null ? '--primary-color' : color)\r\n    const textColor = GetColor('--text-color')\r\n    const secondaryBgColor = GetColor('--secondary-background-color')\r\n\r\n    // component height\r\n    useEffect(() => Streamlit.setFrameHeight())\r\n\r\n    const Wrap = direction === 'vertical' ? Stack : Group\r\n\r\n    //state\r\n    const [value, setValue] = useState(index)\r\n\r\n    //callback\r\n    const onChange = (values: any) => {\r\n        setValue(values)\r\n        if (Array.isArray(values)) {\r\n            Streamlit.setComponentValue(values.map((x: any) => return_index ? Number(x) : kv[Number(x)]))\r\n        } else {\r\n            Streamlit.setComponentValue(return_index ? Number(values) : kv[Number(values)])\r\n        }\r\n    }\r\n\r\n    //listen index\r\n    const prevIndex = useRef(props['index'])\r\n    const prevStValue = useRef(props['stValue'])\r\n    useEffect(() => {\r\n        const i = props['index']\r\n        const st_i = props['stValue']\r\n        if (String(i) !== String(prevIndex.current)) {\r\n            const ii = reindex(i, true, props['multiple'])\r\n            setValue(ii);\r\n            prevIndex.current = props['index']\r\n            if (Array.isArray(ii)) {\r\n                Streamlit.setComponentValue(ii.map((x: any) => return_index ? Number(x) : kv[Number(x)]))\r\n            } else {\r\n                Streamlit.setComponentValue(return_index ? Number(ii) : kv[Number(ii)])\r\n            }\r\n        }\r\n        if (String(st_i) !== String(prevStValue.current)) {\r\n            const st_ii = reindex(st_i, true, props['multiple'])\r\n            setValue(st_ii);\r\n            prevStValue.current = props['stValue']\r\n            if (Array.isArray(st_ii)) {\r\n                Streamlit.setComponentValue(st_ii.map((x: any) => return_index ? Number(x) : kv[Number(x)]))\r\n            } else {\r\n                Streamlit.setComponentValue(return_index ? Number(st_ii) : kv[Number(st_ii)])\r\n            }\r\n        }\r\n    }, [props, kv, return_index])\r\n\r\n    return <LabelWrap\r\n        label={label}\r\n        desc={description}\r\n        size={size}\r\n        align={align}\r\n        children={\r\n            <Chip.Group\r\n                onChange={onChange}\r\n                value={value}\r\n                multiple={multiple}\r\n            >\r\n                <Wrap spacing={'xs'}>\r\n                    {items.map((item: any, idx: any) =>\r\n                        <Chip\r\n                            key={idx}\r\n                            value={item.value}\r\n                            radius={radius}\r\n                            size={size}\r\n                            variant={variant}\r\n                            disabled={item.disabled}\r\n                            styles={(theme) => ({\r\n                                label: {\r\n                                    height: getSize(size)+16,\r\n                                    marginBottom: 0,\r\n                                    color: textColor,\r\n                                    borderColor:\r\n                                        variant !== 'outline' ? 'transparent' : RgbaColor(textColor),\r\n                                    backgroundColor: variant === 'outline' ? 'transparent' : secondaryBgColor,\r\n                                    '&:hover': {\r\n                                        backgroundColor:\r\n                                            variant === 'outline' ? 'transparent' : DarkenColor(secondaryBgColor, 0.1),\r\n                                        borderColor:\r\n                                            variant === 'outline' ? primaryColor : 'transparent',\r\n                                    },\r\n                                    '&[data-checked]:not([data-disabled])': {\r\n                                        color:\r\n                                            variant === 'light' ? primaryColor : variant === 'filled' ? '#fff' : textColor\r\n                                        ,\r\n                                        backgroundColor:\r\n                                            variant === 'light' ? RgbaColor(primaryColor) :\r\n                                                variant === 'filled' ? primaryColor : 'transparent',\r\n                                        borderColor:\r\n                                            variant === 'outline' ? primaryColor : 'transparent',\r\n                                    },\r\n                                    '&[data-checked]:not([data-disabled]):hover': {\r\n                                        backgroundColor:\r\n                                            variant === 'light' ? RgbaColor(primaryColor, 0.3) :\r\n                                                variant === 'filled' ? DarkenColor(primaryColor, 0.1) : 'transparent',\r\n                                    },\r\n                                },\r\n                                checkIcon: {\r\n                                    color:\r\n                                        variant === 'filled' ? '#fff' : primaryColor\r\n                                }\r\n                            })}\r\n                        >\r\n                            {item.label}\r\n                        </Chip>)}\r\n                </Wrap>\r\n            </Chip.Group>\r\n        }\r\n    />\r\n};\r\n\r\nexport default AntdChip\r\n","import {ComponentProps, withStreamlitConnection} from \"streamlit-component-lib\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport componentsMap from \"./components\";\r\nimport {insertScrollbarStyle} from \"./js/utils.react\";\r\nimport './css/utils.css'\r\n\r\n//select component\r\nconst AntdComponent = (props: ComponentProps) => {\r\n    //get data\r\n    const id = props.args['id']\r\n    const kw = props.args['kw']\r\n\r\n    //load streamlit style scrollbar\r\n    insertScrollbarStyle()\r\n\r\n    //return component base on component id\r\n    const component = componentsMap[id]\r\n    if (component === undefined) {\r\n        return <></>\r\n    } else {\r\n        return component(kw)\r\n    }\r\n};\r\n\r\n//wrap component\r\nconst StreamlitAntdComponent = withStreamlitConnection(AntdComponent)\r\n\r\n//render component\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <StreamlitAntdComponent/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}