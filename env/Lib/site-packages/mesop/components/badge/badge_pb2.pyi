"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class BadgeType(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COLOR_FIELD_NUMBER: builtins.int
    OVERLAP_FIELD_NUMBER: builtins.int
    DISABLED_FIELD_NUMBER: builtins.int
    POSITION_FIELD_NUMBER: builtins.int
    CONTENT_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    HIDDEN_FIELD_NUMBER: builtins.int
    color: builtins.str
    overlap: builtins.bool
    disabled: builtins.bool
    position: builtins.str
    content: builtins.str
    description: builtins.str
    size: builtins.str
    hidden: builtins.bool
    def __init__(
        self,
        *,
        color: builtins.str | None = ...,
        overlap: builtins.bool | None = ...,
        disabled: builtins.bool | None = ...,
        position: builtins.str | None = ...,
        content: builtins.str | None = ...,
        description: builtins.str | None = ...,
        size: builtins.str | None = ...,
        hidden: builtins.bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["color", b"color", "content", b"content", "description", b"description", "disabled", b"disabled", "hidden", b"hidden", "overlap", b"overlap", "position", b"position", "size", b"size"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["color", b"color", "content", b"content", "description", b"description", "disabled", b"disabled", "hidden", b"hidden", "overlap", b"overlap", "position", b"position", "size", b"size"]) -> None: ...

global___BadgeType = BadgeType
